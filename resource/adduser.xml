<?xml version="1.0" encoding="UTF-8"?>
<log>
	<version>1.1</version>
	<creator>
		<name>Internet Explorer 网络检查器</name>
		<version>11.0.9600.18231</version>
	</creator>
	<browser>
		<name>Internet Explorer</name>
		<version>11.0.9600.18231</version>
	</browser>
	<pages>
		<page>
			<startedDateTime>2017-12-05T02:30:40.11+08:00</startedDateTime>
			<id>0</id>
			<title/>
			<pageTimings>
				<onContentLoad>-1</onContentLoad>
				<onLoad>-1</onLoad>
			</pageTimings>
		</page>
	</pages>
	<entries>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:30:42.709+08:00</startedDateTime>
			<time>281</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>49</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>forAdd</value>
					</param>
					<param>
						<name>userCode</name>
						<value/>
					</param>
					<param>
						<name>userName</name>
						<value/>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>userCode=&amp;userName=&amp;appCode=&amp;appName=&amp;curPageNum=</text>
				</postData>
				<headersSize>972</headersSize>
				<bodySize>49</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:30:53 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=gbk</value>
					</header>
				</headers>
				<content>
					<size>17037</size>
					<mimeType>text/html;charset=gbk</mimeType>
					<text>









 

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=gbk"&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;

&lt;script language="javascript"&gt;
&lt;!--

function returnUser(){
	//window.location.href="/asone/servlet/UserServlet?method=search&amp;userCode=&amp;userName=";
	window.location.href="/asone/servlet/UserServlet?method=search";
}

function addUser(){  
    //检测初始密码长度，长度为且仅为8位
   /*if(!checkInitPasswordLength()){
      alert("[初始密码]长度必须为8位！");
      return false;
    }*/
   if(!_check(document.detailForm)){
      return false;
    } 
    /*
     * 将已分配的角色列表选定提交，否则在服务器段无法
     * 获得已分配的角色列表数据
     */
    var distriObj=document.all("distriRoles");
    for(var i=0;i&lt;distriObj.length;i++){
       distriObj.options[i].selected=true;
    }
    
    
    
    /*
     * 提交表单
     */ 
    document.forms["detailForm"].action="/asone/servlet/UserServlet?method=add";
    document.forms["detailForm"].submit();
}

function checkInitPasswordLength(){
   var initPwdObj=document.all("initPwd");
   if(initPwdObj!=null){
      if(initPwdObj.value.length!=0&amp;&amp;initPwdObj.value.length!=8){
        return false;
      }else{
        return true;
      }
   }
}
//单选角色、全选角色、单删角色、全删角色
function moveItems( src , dest , bool ){
	var srcObj=document.all( src );
	var destObj=document.all( dest );
	
	for(va明细数据下载&lt;/option&gt;  
      
        &lt;option value="CFAZB001"&gt;（CFAZ）银行自身业务外债操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB002"&gt;（CFAZ）银行自身业务对外担保操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB003"&gt;（CFAZ）银行自身业务国内外汇贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB004"&gt;（CFAZ）银行自身业务境外担保项下境内贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB005"&gt;（CFAZ）银行自身业务外汇质押人民币贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB006"&gt;（CFAZ）银行自身商业银行人民币结构性存款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB007"&gt;（CFAZ）银行自身业务存量信息管理操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB008"&gt;（CFAZ）银行自身业务接口数据应急处理操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB009"&gt;（CFAZ）银行自身金融机构资产负债项目月报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB010"&gt;（CFAZ）银行代客业务股权激励报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB011"&gt;（CFAZ）银行代客业务RQFII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB012"&gt;（CFAZ）银行代客业务QFII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB013"&gt;（CFAZ）银行代客业务QDII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB015"&gt;（CFAZ）期货报表填报&lt;/option&gt;  
      
        &lt;option value="GJSHB003"&gt;（GJSH）业务主管&lt;/option&gt;  
      
        &lt;option value="GJSHB004"&gt;（GJSH）经办员 &lt;/option&gt;  
      
        &lt;option value="GJSHB005"&gt;（GJSH）业务管理员&lt;/option&gt;  
      
        &lt;option value="GJSHB006"&gt;（GJSH）只能办结汇业务的经办员  &lt;/option&gt;  
      
        &lt;option value="GJSHB007"&gt;（GJSH）只能办购汇业务的经办员&lt;/option&gt;  
      
        &lt;option value="ICWDB001"&gt;（ICWD）个人外币现钞存取数据填报角色&lt;/option&gt;  
      
        &lt;option value="ICWDB002"&gt;（ICWD）个人外币现钞存取数据查询&lt;/option&gt;  
      
        &lt;option value="IFALB001"&gt;（IFAL）对外金融资产负债及交易数据填报角色&lt;/option&gt;  
      
        &lt;option value="IFALB002"&gt;（IFAL）对外金融资产负债及交易数据查询角色&lt;/option&gt;  
      
        &lt;option value="INFOB001"&gt;（INFO）INFO银行业务员&lt;/option&gt;  
      
        &lt;option value="INFOB002"&gt;（INFO）INFO银行信息员&lt;/option&gt;  
      
        &lt;option value="IYJTB001"&gt;（IYJT）IYJT各地自主选择报表报送&lt;/option&gt;  
      
        &lt;option value="IYJTB002"&gt;（IYJT）IYJT全国统一报表报送&lt;/option&gt;  
      
        &lt;option value="IYJTB003"&gt;（IYJT）IYJT各地自主选择报表查询&lt;/option&gt;  
      
        &lt;option value="IYJTB004"&gt;（IYJT）IYJT全国统一报表查询&lt;/option&gt;  
      
        &lt;option value="IYJTB005"&gt;（IYJT）IYJT机构信息&lt;/option&gt;  
      
        &lt;option value="IYTCB001"&gt;（IYTC）IYTC数据录入&lt;/option&gt;  
      
        &lt;option value="IYTCB002"&gt;（IYTC）IYTC多日查询&lt;/option&gt;  
      
        &lt;option value="IZZTB001"&gt;（IZZT）IZZT银行数据填报&lt;/option&gt;  
      
        &lt;option value="JGXCB001"&gt;（JGXC）机构外币现钞数据报送&lt;/option&gt;  
      
        &lt;option value="JGXCB002"&gt;（JGXC）机构外币现钞数据查询&lt;/option&gt;  
      
        &lt;option value="JSHBB001"&gt;（JSHB）银行结汇业务操作员&lt;/option&gt;  
      
        &lt;option value="JSHBB002"&gt;（JSHB）银行购汇业务操作员&lt;/option&gt;  
      
        &lt;option value="JSHBB003"&gt;（JSHB）账户内结售汇接口数据应急处理操作员&lt;/option&gt;  
      
        &lt;option value="PCISB001"&gt;（PCIS）外币现钞业务主管&lt;/option&gt;  
      
        &lt;option value="PCISB002"&gt;（PCIS）外币现钞业务经办&lt;/option&gt;  
      
        &lt;option value="PMISB001"&gt;（PMIS）结售汇业务主管&lt;/option&gt;  
      
        &lt;option value="PMISB002"&gt;（PMIS）结售汇业务经办&lt;/option&gt;  
      
        &lt;option value="TMSBB001"&gt;（TMSB）货物贸易外汇网上业务 &lt;/option&gt;  
      
     &lt;!-- 整个form提交时该隐藏域不进行提交因此该隐藏域放置到form外面&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt; --&gt;
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;td align="center" width="8%"&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , false );" value=" &amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , true );" value=" &amp;gt;&amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , false );" value=" &amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , true );" value=" &amp;lt;&amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
    &lt;/td&gt;
    &lt;td width="46%"&gt;
      已分配的角色列表：&lt;br&gt;
      &lt;select name="distriRoles" multiple="multiple" size="10" style="width:100%;height:150px;height: 230px" &gt;
      
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/fieldset&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;


function describeRole(){
	window.open("/asone/jsp/user/userAddUrl.jsp","roleWin" ,"height=700,width=600,left=150,top=0,toolbar=no,menubar=no,scrollbars=yes,resizable=no");
}
&lt;/script&gt;
&lt;/html&gt;
</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>17037</bodySize>
			</response>
			<cache/>
			<timings>
				<send>47</send>
				<wait>172</wait>
				<receive>62</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:30:42.928+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>373</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:30:42.928+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>406</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:30:42.928+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:30:42.928+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>404</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:30:42.928+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.415+08:00</startedDateTime>
			<time>374</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=add</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>185</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>add</value>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>rand=8473&amp;userCode=0048229&amp;userName=%BB%C6%C0%F6%E5%FA&amp;orgCode=440700036600&amp;orgType=2&amp;tel=0750-3168081&amp;email=xiest@rhebank.com&amp;initPwd=123456Gj&amp;distriRoles=PCISB002&amp;distriRoles=PMISB002</text>
				</postData>
				<headersSize>973</headersSize>
				<bodySize>185</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:31:31 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=GBK</value>
					</header>
				</headers>
				<content>
					<size>7573</size>
					<mimeType>text/html;charset=GBK</mimeType>
					<text>








&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=GBK" /&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;

&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/page.js"&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;
&lt;!--
function queryUser(){
	_checkButton(document.listForm,true); 
    if(!_check(document.listForm)){
	    _checkButton(document.listForm,false); 
	    return false;
    }
	document.forms["listForm"].action="/asone/servlet/UserServlet?method=search";	
	document.forms["listForm"].submit();
	return true;
}

function addUser(){
	_checkButton(document.listForm,true); 
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=";
    document.forms["listForm"].submit();
    return true;
}

function modifyUser(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forModifyUser&amp;qry1=&amp;qry2=";
    document.forms["listForm"].submit();
    return true;
}

function modifyRights(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?metround-color:#f7fcff;"&gt;
			    &lt;tr class="text01"&gt;
                   &lt;td height="18" width="85%"  valign="middle"&gt;
                     &lt;img src="/asone/images/currentpositionbg.jpg" width="8" height="18" id="positionimg"/&gt;
                     &lt;div class="currentposition"&gt;
                       &lt;strong&gt;&amp;nbsp;当前位置：用户角色管理-&amp;gt;业务操作员维护&lt;/strong&gt;
                     &lt;/div&gt;
                   &lt;/td&gt;
                   &lt;td  class="currentposition" align="right"&gt;&lt;/td&gt;
                &lt;/tr&gt;          
				&lt;tr&gt;
					&lt;td colspan="2" height="25" width="85%"&gt;
						&lt;div id="query01" style="border-bottom: 1px solid #5C81A7;" class="text01"&gt;
						&lt;table width="100%" border="0" cellspacing="1" cellpadding="0" style="background-color:#f7fcff;"&gt;
                         &lt;tr&gt;                     	
                           &lt;td width="20%"&gt;
                                  用户代码&amp;nbsp;&lt;input name="userCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户代码" class="queryinput" fieldTitle="用户代码" fieldType="hasSpecialChar" maxlength="10" tabindex="1" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  用户名称&amp;nbsp;&lt;input name="userName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户名称"  class="queryinput" fieldTitle="用户名称" fieldType="hasSpecialChar" maxlength="40" tabindex="2" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                              &lt;input type="button" name="btnQuery" value="查询(Q)" class="button" accesskey="Q" onclick="return queryUser();"  tabindex="3"&gt; 
				           &lt;/td&gt;
				           &lt;/tr&gt;
				           &lt;tr&gt;
				           &lt;td width="20%"&gt;
                                  应用代码&amp;nbsp;&lt;input name="appCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用代码" class="queryinput" fieldTitle="应用代码" fieldType="hasSpecialChar" maxlength="10" tabindex="3" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  应用名称&amp;nbsp;&lt;input name="appName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用名称"  class="queryinput" fieldTitle="应用名称" fieldType="hasSpecialChar" maxlength="40" tabindex="4" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                         &lt;/tr&gt;
                         &lt;/table&gt;
                         &lt;/div&gt;
					&lt;/td&gt;						
				&lt;/tr&gt;
				&lt;tr&gt;
	            &lt;td&gt;
	             &lt;div&gt;
	               &lt;input type="button" name="btnAdd" value="增加(A)" class="button" style="width:90px" accesskey="A" onclick="return addUser();" tabindex="4" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyUser" value="修改用户(U)" class="button" style="width:90px" accesskey="U" onclick="return modifyUser();" tabindex="5" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyRights" value="修改权限(P)" class="button" style="width:90px" accesskey="P" onclick="return modifyRights();" tabindex="6" onkeydown="_afterEnter();"&gt;
	             &lt;/div&gt;
	            &lt;/td&gt;
	            &lt;/tr&gt;
	            &lt;tr&gt;
	              &lt;td&gt;
	                &lt;div id="msg" style="display:none"&gt;&lt;/div&gt;
	              &lt;/td&gt;
	            &lt;/tr&gt;	
				&lt;tr&gt;
					&lt;td colspan="2" class="text01"&gt;						  		    
						&lt;div id="primarydata" style="width:100%;height:100%;border:1px solid #9CC6F7"&gt;
							&lt;table width="100%" id="listTable" border="0" cellpadding="0" cellspacing="1" bgcolor="#9CC6F7"&gt;
								&lt;tr class="text01"&gt;	
								&lt;th  align="center" class="text01" width="5%"&gt;选择&lt;/th&gt;			
						        &lt;th  align="center" class="text01" width="7%" &gt;用户代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;机构代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="9%" &gt;用户名称&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="40%" &gt;应用列表&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;删除标志&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="10%" &gt;联系电话&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="14%" &gt;邮箱地址&lt;/th&gt;
					            &lt;/tr&gt;
				                					              
					        &lt;/table&gt;
						&lt;/div&gt;	
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr&gt;
		&lt;td colspan="3"&gt;
			
			



 




	
	&lt;div id="pagezone" class="pagination"&gt;
		&lt;ul&gt;			
			&lt;li class="firstpage"&gt;&lt;input type="hidden" name="curPageNum" value=""&gt;第 1 页&lt;/li&gt;
			
				&lt;li class="firstpage" &gt;&amp;nbsp;&amp;nbsp;&lt;a href="#" disabled&gt;首&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
				&lt;li class="nextpage"  &gt;&lt;a href="#" disabled&gt;上一页&lt;/a&gt;&lt;/li&gt;				
						
			&lt;li class="nextpage" onclick="nextPage('/asone/servlet/UserServlet?method=search','2');"&gt;&lt;a name="nextpage" href="#"&gt;下一页&lt;/a&gt;&lt;/li&gt;
			&lt;li class="endpage" onclick="nextPage('/asone/servlet/UserServlet?method=search',0);"&gt;&lt;a name="endpage" href="#"&gt;尾&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;

&lt;script language="javascript"&gt;	
	&lt;!--如果页面中的记录数小于$per_Page_Size+1，则补空行--&gt;
	initList(10);	
&lt;/script&gt;
 
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;
_checkButton(document.listForm,false); 
document.body.onload=function(){
	document.all.userCode.focus();
}

    showMsg("业务操作员增加成功.","info","0");

&lt;/script&gt;
&lt;/html&gt;</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>7573</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>327</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.789+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>350</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.789+08:00</startedDateTime>
			<time>16</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>16</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.805+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>383</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.805+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.805+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>381</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:20.805+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/page.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>375</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"4209-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=95</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>4209</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//判断是否已经是最后一页的标志,0表示尚未到达最后一页，1表示已经到达最后一页
var pageBool = '0';

//向前分页
function previousPage(formAction, curPageNum ){
	toPage(formAction,  curPageNum );
}

//向前分页
function nextPage(formAction,  curPageNum  ){
	//如果已经到达最后一页了，则不再执行。
	if(pageBool=='1'){
		return false;
	}
	toPage(formAction,  curPageNum);
}

//跳转到第几页
function toPage(formAction,  curPageNum ){
	if( !checkPage() ){
		return;
	}
	document.all.curPageNum.value=curPageNum;
	if(formAction!=""){
		document.forms[0].action=formAction;
	}
	document.forms[0].submit();
}
//对分页查询条件进行校验，需要根据实际情况重写，默认恒返回true
function checkPage(){
	return true;
}
//将列表补全
function initList( perPageSize ){
	var rowLength = listTable.rows.length-1;
	if( rowLength&lt;=perPageSize*1 ){
		document.all.nextpage.disabled="true";
		document.all.endpage.disabled="true";
		//若需要补全列表，则表名已经到达最后一页了。
		pageBool='1';
		for( var i=0 ; i&lt;perPageSize*1-rowLength+1 ; i++ ){
			var rowObj = listTable.insertRow();
			rowObj.className="listdata";
			for( var j=0 ; j&lt;listTable.rows[ 0 ].cells.length ; j++ ){
				var cellObj=rowObj.insertCell();
			}
		}
	}
	&lt;!--将$per_Page_Size+1条记录，隐藏显示--&gt;
	var rowObj=listTable.rows;
	if(rowObj.length==perPageSize+2){
		rowObj[perPageSize+1].style.display="none";
	}
}

/**
 * 弹出模式窗体
 * @param url 地址
 * @param obj 参数
 * @param dialogWidth IE7宽度
 * @param dialogHeight IE7高度
 * @return 返回结果
 */
function modalDialog(url,obj,dialogWidth,dialogHeight){
	dialogWidth=ieX(dialogWidth);
	dialogHeight=ieY(dialogHeight);
	return window.showModalDialog(url,obj,"dialogWidth:" + dialogWidth + "px; dialogHeight:" + dialogHeight + "px; help:no; status:0");
}
/**
 * 弹出窗口功能
 * @param url 弹出窗口的url
 * @param name 弹出窗口的名称
 * @return 返回当前浏览器版本所需要的宽度
 */
function openWin(url,name,iWidth,iHeight){
	var url;
	var name;
    if (iWidth==null){
		iWidth=400;
	}
	if (iHeight==null){
		iHeight=300;
	}
	_open(url,name,iWidth,iHeight);
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function _open(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  iWidth = ieX(iWidth);                          //弹出窗口的宽度;
  iHeight = ieY(iHeight);                     //弹出窗口的高度;
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  window.open(url,name,'height='+iHeight+',,innerHeight='+iHeight+',width='+iWidth+',innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
/**
 * 处理弹出窗口的宽度
 * @param n IE7宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n IE7高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}</text>
				</content>
				<redirectionURL/>
				<headersSize>179</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:24.237+08:00</startedDateTime>
			<time>203</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>49</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>forAdd</value>
					</param>
					<param>
						<name>userCode</name>
						<value/>
					</param>
					<param>
						<name>userName</name>
						<value/>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>userCode=&amp;userName=&amp;appCode=&amp;appName=&amp;curPageNum=</text>
				</postData>
				<headersSize>972</headersSize>
				<bodySize>49</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:31:34 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=99</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=gbk</value>
					</header>
				</headers>
				<content>
					<size>17035</size>
					<mimeType>text/html;charset=gbk</mimeType>
					<text>









 

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=gbk"&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;

&lt;script language="javascript"&gt;
&lt;!--

function returnUser(){
	//window.location.href="/asone/servlet/UserServlet?method=search&amp;userCode=&amp;userName=";
	window.location.href="/asone/servlet/UserServlet?method=search";
}

function addUser(){  
    //检测初始密码长度，长度为且仅为8位
   /*if(!checkInitPasswordLength()){
      alert("[初始密码]长度必须为8位！");
      return false;
    }*/
   if(!_check(document.detailForm)){
      return false;
    } 
    /*
     * 将已分配的角色列表选定提交，否则在服务器段无法
     * 获得已分配的角色列表数据
     */
    var distriObj=document.all("distriRoles");
    for(var i=0;i&lt;distriObj.length;i++){
       distriObj.options[i].selected=true;
    }
    
    
    
    /*
     * 提交表单
     */ 
    document.forms["detailForm"].action="/asone/servlet/UserServlet?method=add";
    document.forms["detailForm"].submit();
}

function checkInitPasswordLength(){
   var initPwdObj=document.all("initPwd");
   if(initPwdObj!=null){
      if(initPwdObj.value.length!=0&amp;&amp;initPwdObj.value.length!=8){
        return false;
      }else{
        return true;
      }
   }
}
//单选角色、全选角色、单删角色、全删角色
function moveItems( src , dest , bool ){
	var srcObj=document.all( src );
	var destObj=document.all( dest );
	
	for(va细数据下载&lt;/option&gt;  
      
        &lt;option value="CFAZB001"&gt;（CFAZ）银行自身业务外债操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB002"&gt;（CFAZ）银行自身业务对外担保操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB003"&gt;（CFAZ）银行自身业务国内外汇贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB004"&gt;（CFAZ）银行自身业务境外担保项下境内贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB005"&gt;（CFAZ）银行自身业务外汇质押人民币贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB006"&gt;（CFAZ）银行自身商业银行人民币结构性存款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB007"&gt;（CFAZ）银行自身业务存量信息管理操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB008"&gt;（CFAZ）银行自身业务接口数据应急处理操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB009"&gt;（CFAZ）银行自身金融机构资产负债项目月报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB010"&gt;（CFAZ）银行代客业务股权激励报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB011"&gt;（CFAZ）银行代客业务RQFII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB012"&gt;（CFAZ）银行代客业务QFII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB013"&gt;（CFAZ）银行代客业务QDII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB015"&gt;（CFAZ）期货报表填报&lt;/option&gt;  
      
        &lt;option value="GJSHB003"&gt;（GJSH）业务主管&lt;/option&gt;  
      
        &lt;option value="GJSHB004"&gt;（GJSH）经办员 &lt;/option&gt;  
      
        &lt;option value="GJSHB005"&gt;（GJSH）业务管理员&lt;/option&gt;  
      
        &lt;option value="GJSHB006"&gt;（GJSH）只能办结汇业务的经办员  &lt;/option&gt;  
      
        &lt;option value="GJSHB007"&gt;（GJSH）只能办购汇业务的经办员&lt;/option&gt;  
      
        &lt;option value="ICWDB001"&gt;（ICWD）个人外币现钞存取数据填报角色&lt;/option&gt;  
      
        &lt;option value="ICWDB002"&gt;（ICWD）个人外币现钞存取数据查询&lt;/option&gt;  
      
        &lt;option value="IFALB001"&gt;（IFAL）对外金融资产负债及交易数据填报角色&lt;/option&gt;  
      
        &lt;option value="IFALB002"&gt;（IFAL）对外金融资产负债及交易数据查询角色&lt;/option&gt;  
      
        &lt;option value="INFOB001"&gt;（INFO）INFO银行业务员&lt;/option&gt;  
      
        &lt;option value="INFOB002"&gt;（INFO）INFO银行信息员&lt;/option&gt;  
      
        &lt;option value="IYJTB001"&gt;（IYJT）IYJT各地自主选择报表报送&lt;/option&gt;  
      
        &lt;option value="IYJTB002"&gt;（IYJT）IYJT全国统一报表报送&lt;/option&gt;  
      
        &lt;option value="IYJTB003"&gt;（IYJT）IYJT各地自主选择报表查询&lt;/option&gt;  
      
        &lt;option value="IYJTB004"&gt;（IYJT）IYJT全国统一报表查询&lt;/option&gt;  
      
        &lt;option value="IYJTB005"&gt;（IYJT）IYJT机构信息&lt;/option&gt;  
      
        &lt;option value="IYTCB001"&gt;（IYTC）IYTC数据录入&lt;/option&gt;  
      
        &lt;option value="IYTCB002"&gt;（IYTC）IYTC多日查询&lt;/option&gt;  
      
        &lt;option value="IZZTB001"&gt;（IZZT）IZZT银行数据填报&lt;/option&gt;  
      
        &lt;option value="JGXCB001"&gt;（JGXC）机构外币现钞数据报送&lt;/option&gt;  
      
        &lt;option value="JGXCB002"&gt;（JGXC）机构外币现钞数据查询&lt;/option&gt;  
      
        &lt;option value="JSHBB001"&gt;（JSHB）银行结汇业务操作员&lt;/option&gt;  
      
        &lt;option value="JSHBB002"&gt;（JSHB）银行购汇业务操作员&lt;/option&gt;  
      
        &lt;option value="JSHBB003"&gt;（JSHB）账户内结售汇接口数据应急处理操作员&lt;/option&gt;  
      
        &lt;option value="PCISB001"&gt;（PCIS）外币现钞业务主管&lt;/option&gt;  
      
        &lt;option value="PCISB002"&gt;（PCIS）外币现钞业务经办&lt;/option&gt;  
      
        &lt;option value="PMISB001"&gt;（PMIS）结售汇业务主管&lt;/option&gt;  
      
        &lt;option value="PMISB002"&gt;（PMIS）结售汇业务经办&lt;/option&gt;  
      
        &lt;option value="TMSBB001"&gt;（TMSB）货物贸易外汇网上业务 &lt;/option&gt;  
      
     &lt;!-- 整个form提交时该隐藏域不进行提交因此该隐藏域放置到form外面&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt; --&gt;
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;td align="center" width="8%"&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , false );" value=" &amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , true );" value=" &amp;gt;&amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , false );" value=" &amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , true );" value=" &amp;lt;&amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
    &lt;/td&gt;
    &lt;td width="46%"&gt;
      已分配的角色列表：&lt;br&gt;
      &lt;select name="distriRoles" multiple="multiple" size="10" style="width:100%;height:150px;height: 230px" &gt;
      
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/fieldset&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;


function describeRole(){
	window.open("/asone/jsp/user/userAddUrl.jsp","roleWin" ,"height=700,width=600,left=150,top=0,toolbar=no,menubar=no,scrollbars=yes,resizable=no");
}
&lt;/script&gt;
&lt;/html&gt;
</text>
				</content>
				<redirectionURL/>
				<headersSize>317</headersSize>
				<bodySize>17035</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>156</wait>
				<receive>47</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:24.393+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>373</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:24.393+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>406</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:24.408+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:24.408+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>404</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:31:24.408+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.608+08:00</startedDateTime>
			<time>281</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=add</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>185</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>add</value>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>rand=0371&amp;userCode=0057589&amp;userName=%CD%F5%D6%BE%B7%E6&amp;orgCode=440700036600&amp;orgType=2&amp;tel=0750-3168081&amp;email=xiest@rhebank.com&amp;initPwd=123456Gj&amp;distriRoles=PCISB002&amp;distriRoles=PMISB002</text>
				</postData>
				<headersSize>973</headersSize>
				<bodySize>185</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:32:16 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=GBK</value>
					</header>
				</headers>
				<content>
					<size>7573</size>
					<mimeType>text/html;charset=GBK</mimeType>
					<text>








&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=GBK" /&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;

&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/page.js"&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;
&lt;!--
function queryUser(){
	_checkButton(document.listForm,true); 
    if(!_check(document.listForm)){
	    _checkButton(document.listForm,false); 
	    return false;
    }
	document.forms["listForm"].action="/asone/servlet/UserServlet?method=search";	
	document.forms["listForm"].submit();
	return true;
}

function addUser(){
	_checkButton(document.listForm,true); 
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=";
    document.forms["listForm"].submit();
    return true;
}

function modifyUser(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forModifyUser&amp;qry1=&amp;qry2=";
    document.forms["listForm"].submit();
    return true;
}

function modifyRights(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?metround-color:#f7fcff;"&gt;
			    &lt;tr class="text01"&gt;
                   &lt;td height="18" width="85%"  valign="middle"&gt;
                     &lt;img src="/asone/images/currentpositionbg.jpg" width="8" height="18" id="positionimg"/&gt;
                     &lt;div class="currentposition"&gt;
                       &lt;strong&gt;&amp;nbsp;当前位置：用户角色管理-&amp;gt;业务操作员维护&lt;/strong&gt;
                     &lt;/div&gt;
                   &lt;/td&gt;
                   &lt;td  class="currentposition" align="right"&gt;&lt;/td&gt;
                &lt;/tr&gt;          
				&lt;tr&gt;
					&lt;td colspan="2" height="25" width="85%"&gt;
						&lt;div id="query01" style="border-bottom: 1px solid #5C81A7;" class="text01"&gt;
						&lt;table width="100%" border="0" cellspacing="1" cellpadding="0" style="background-color:#f7fcff;"&gt;
                         &lt;tr&gt;                     	
                           &lt;td width="20%"&gt;
                                  用户代码&amp;nbsp;&lt;input name="userCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户代码" class="queryinput" fieldTitle="用户代码" fieldType="hasSpecialChar" maxlength="10" tabindex="1" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  用户名称&amp;nbsp;&lt;input name="userName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户名称"  class="queryinput" fieldTitle="用户名称" fieldType="hasSpecialChar" maxlength="40" tabindex="2" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                              &lt;input type="button" name="btnQuery" value="查询(Q)" class="button" accesskey="Q" onclick="return queryUser();"  tabindex="3"&gt; 
				           &lt;/td&gt;
				           &lt;/tr&gt;
				           &lt;tr&gt;
				           &lt;td width="20%"&gt;
                                  应用代码&amp;nbsp;&lt;input name="appCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用代码" class="queryinput" fieldTitle="应用代码" fieldType="hasSpecialChar" maxlength="10" tabindex="3" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  应用名称&amp;nbsp;&lt;input name="appName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用名称"  class="queryinput" fieldTitle="应用名称" fieldType="hasSpecialChar" maxlength="40" tabindex="4" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                         &lt;/tr&gt;
                         &lt;/table&gt;
                         &lt;/div&gt;
					&lt;/td&gt;						
				&lt;/tr&gt;
				&lt;tr&gt;
	            &lt;td&gt;
	             &lt;div&gt;
	               &lt;input type="button" name="btnAdd" value="增加(A)" class="button" style="width:90px" accesskey="A" onclick="return addUser();" tabindex="4" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyUser" value="修改用户(U)" class="button" style="width:90px" accesskey="U" onclick="return modifyUser();" tabindex="5" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyRights" value="修改权限(P)" class="button" style="width:90px" accesskey="P" onclick="return modifyRights();" tabindex="6" onkeydown="_afterEnter();"&gt;
	             &lt;/div&gt;
	            &lt;/td&gt;
	            &lt;/tr&gt;
	            &lt;tr&gt;
	              &lt;td&gt;
	                &lt;div id="msg" style="display:none"&gt;&lt;/div&gt;
	              &lt;/td&gt;
	            &lt;/tr&gt;	
				&lt;tr&gt;
					&lt;td colspan="2" class="text01"&gt;						  		    
						&lt;div id="primarydata" style="width:100%;height:100%;border:1px solid #9CC6F7"&gt;
							&lt;table width="100%" id="listTable" border="0" cellpadding="0" cellspacing="1" bgcolor="#9CC6F7"&gt;
								&lt;tr class="text01"&gt;	
								&lt;th  align="center" class="text01" width="5%"&gt;选择&lt;/th&gt;			
						        &lt;th  align="center" class="text01" width="7%" &gt;用户代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;机构代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="9%" &gt;用户名称&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="40%" &gt;应用列表&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;删除标志&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="10%" &gt;联系电话&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="14%" &gt;邮箱地址&lt;/th&gt;
					            &lt;/tr&gt;
				                					              
					        &lt;/table&gt;
						&lt;/div&gt;	
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr&gt;
		&lt;td colspan="3"&gt;
			
			



 




	
	&lt;div id="pagezone" class="pagination"&gt;
		&lt;ul&gt;			
			&lt;li class="firstpage"&gt;&lt;input type="hidden" name="curPageNum" value=""&gt;第 1 页&lt;/li&gt;
			
				&lt;li class="firstpage" &gt;&amp;nbsp;&amp;nbsp;&lt;a href="#" disabled&gt;首&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
				&lt;li class="nextpage"  &gt;&lt;a href="#" disabled&gt;上一页&lt;/a&gt;&lt;/li&gt;				
						
			&lt;li class="nextpage" onclick="nextPage('/asone/servlet/UserServlet?method=search','2');"&gt;&lt;a name="nextpage" href="#"&gt;下一页&lt;/a&gt;&lt;/li&gt;
			&lt;li class="endpage" onclick="nextPage('/asone/servlet/UserServlet?method=search',0);"&gt;&lt;a name="endpage" href="#"&gt;尾&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;

&lt;script language="javascript"&gt;	
	&lt;!--如果页面中的记录数小于$per_Page_Size+1，则补空行--&gt;
	initList(10);	
&lt;/script&gt;
 
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;
_checkButton(document.listForm,false); 
document.body.onload=function(){
	document.all.userCode.focus();
}

    showMsg("业务操作员增加成功.","info","0");

&lt;/script&gt;
&lt;/html&gt;</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>7573</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>203</wait>
				<receive>15</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.874+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>350</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.889+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.889+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>383</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.889+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.889+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>381</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:05.889+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/page.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>375</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"4209-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=95</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>4209</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//判断是否已经是最后一页的标志,0表示尚未到达最后一页，1表示已经到达最后一页
var pageBool = '0';

//向前分页
function previousPage(formAction, curPageNum ){
	toPage(formAction,  curPageNum );
}

//向前分页
function nextPage(formAction,  curPageNum  ){
	//如果已经到达最后一页了，则不再执行。
	if(pageBool=='1'){
		return false;
	}
	toPage(formAction,  curPageNum);
}

//跳转到第几页
function toPage(formAction,  curPageNum ){
	if( !checkPage() ){
		return;
	}
	document.all.curPageNum.value=curPageNum;
	if(formAction!=""){
		document.forms[0].action=formAction;
	}
	document.forms[0].submit();
}
//对分页查询条件进行校验，需要根据实际情况重写，默认恒返回true
function checkPage(){
	return true;
}
//将列表补全
function initList( perPageSize ){
	var rowLength = listTable.rows.length-1;
	if( rowLength&lt;=perPageSize*1 ){
		document.all.nextpage.disabled="true";
		document.all.endpage.disabled="true";
		//若需要补全列表，则表名已经到达最后一页了。
		pageBool='1';
		for( var i=0 ; i&lt;perPageSize*1-rowLength+1 ; i++ ){
			var rowObj = listTable.insertRow();
			rowObj.className="listdata";
			for( var j=0 ; j&lt;listTable.rows[ 0 ].cells.length ; j++ ){
				var cellObj=rowObj.insertCell();
			}
		}
	}
	&lt;!--将$per_Page_Size+1条记录，隐藏显示--&gt;
	var rowObj=listTable.rows;
	if(rowObj.length==perPageSize+2){
		rowObj[perPageSize+1].style.display="none";
	}
}

/**
 * 弹出模式窗体
 * @param url 地址
 * @param obj 参数
 * @param dialogWidth IE7宽度
 * @param dialogHeight IE7高度
 * @return 返回结果
 */
function modalDialog(url,obj,dialogWidth,dialogHeight){
	dialogWidth=ieX(dialogWidth);
	dialogHeight=ieY(dialogHeight);
	return window.showModalDialog(url,obj,"dialogWidth:" + dialogWidth + "px; dialogHeight:" + dialogHeight + "px; help:no; status:0");
}
/**
 * 弹出窗口功能
 * @param url 弹出窗口的url
 * @param name 弹出窗口的名称
 * @return 返回当前浏览器版本所需要的宽度
 */
function openWin(url,name,iWidth,iHeight){
	var url;
	var name;
    if (iWidth==null){
		iWidth=400;
	}
	if (iHeight==null){
		iHeight=300;
	}
	_open(url,name,iWidth,iHeight);
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function _open(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  iWidth = ieX(iWidth);                          //弹出窗口的宽度;
  iHeight = ieY(iHeight);                     //弹出窗口的高度;
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  window.open(url,name,'height='+iHeight+',,innerHeight='+iHeight+',width='+iWidth+',innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
/**
 * 处理弹出窗口的宽度
 * @param n IE7宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n IE7高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}</text>
				</content>
				<redirectionURL/>
				<headersSize>179</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:12.628+08:00</startedDateTime>
			<time>312</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>49</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>forAdd</value>
					</param>
					<param>
						<name>userCode</name>
						<value/>
					</param>
					<param>
						<name>userName</name>
						<value/>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>userCode=&amp;userName=&amp;appCode=&amp;appName=&amp;curPageNum=</text>
				</postData>
				<headersSize>972</headersSize>
				<bodySize>49</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:32:23 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=gbk</value>
					</header>
				</headers>
				<content>
					<size>9935</size>
					<mimeType>text/html;charset=gbk</mimeType>
					<text>









 

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=gbk"&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;

&lt;script language="javascript"&gt;
&lt;!--

function returnUser(){
	//window.location.href="/asone/servlet/UserServlet?method=search&amp;userCode=&amp;userName=";
	window.location.href="/asone/servlet/UserServlet?method=search";
}

function addUser(){  
    //检测初始密码长度，长度为且仅为8位
   /*if(!checkInitPasswordLength()){
      alert("[初始密码]长度必须为8位！");
      return false;
    }*/
   if(!_check(document.detailForm)){
      return false;
    } 
    /*
     * 将已分配的角色列表选定提交，否则在服务器段无法
     * 获得已分配的角色列表数据
     */
    var distriObj=document.all("distriRoles");
    for(var i=0;i&lt;distriObj.length;i++){
       distriObj.options[i].selected=true;
    }
    
    
    
    /*
     * 提交表单
     */ 
    document.forms["detailForm"].action="/asone/servlet/UserServlet?method=add";
    document.forms["detailForm"].submit();
}

function checkInitPasswordLength(){
   var initPwdObj=document.all("initPwd");
   if(initPwdObj!=null){
      if(initPwdObj.value.length!=0&amp;&amp;initPwdObj.value.length!=8){
        return false;
      }else{
        return true;
      }
   }
}
//单选角色、全选角色、单删角色、全删角色
function moveItems( src , dest , bool ){
	var srcObj=document.all( src );
	var destObj=document.all( dest );
	
	for(va明细数据下载&lt;/option&gt;  
      
        &lt;option value="CFAZB001"&gt;（CFAZ）银行自身业务外债操證C%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt; --&gt;
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;td align="center" width="8%"&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , false );" value=" &amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , true );" value=" &amp;gt;&amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , false );" value=" &amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , true );" value=" &amp;lt;&amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
    &lt;/td&gt;
    &lt;td width="46%"&gt;
      已分配的角色列表：&lt;br&gt;
      &lt;select name="distriRoles" multiple="multiple" size="10" style="width:100%;height:150px;height: 230px" &gt;
      
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/fieldset&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;


function describeRole(){
	window.open("/asone/jsp/user/userAddUrl.jsp","roleWin" ,"height=700,width=600,left=150,top=0,toolbar=no,menubar=no,scrollbars=yes,resizable=no");
}
&lt;/script&gt;
&lt;/html&gt;
</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>9935</bodySize>
			</response>
			<cache/>
			<timings>
				<send>63</send>
				<wait>187</wait>
				<receive>62</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:12.878+08:00</startedDateTime>
			<time>16</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>373</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>16</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:12.894+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>406</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:12.894+08:00</startedDateTime>
			<time>15</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>15</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:12.909+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>404</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:32:12.909+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.490+08:00</startedDateTime>
			<time>374</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=add</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>185</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>add</value>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>rand=3580&amp;userCode=0057605&amp;userName=%C0%EE%B9%FA%C8%F0&amp;orgCode=440700036600&amp;orgType=2&amp;tel=0750-3168081&amp;email=xiest@rhebank.com&amp;initPwd=123456Gj&amp;distriRoles=PCISB002&amp;distriRoles=PMISB002</text>
				</postData>
				<headersSize>973</headersSize>
				<bodySize>185</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:33:11 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=GBK</value>
					</header>
				</headers>
				<content>
					<size>8735</size>
					<mimeType>text/html;charset=GBK</mimeType>
					<text>








&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=GBK" /&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;

&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/page.js"&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;
&lt;!--
function queryUser(){
	_checkButton(document.listForm,true); 
    if(!_check(document.listForm)){
	    _checkButton(document.listForm,false); 
	    return false;
    }
	document.forms["listForm"].action="/asone/servlet/UserServlet?method=search";	
	document.forms["listForm"].submit();
	return true;
}

function addUser(){
	_checkButton(document.listForm,true); 
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=";
    document.forms["listForm"].submit();
    return true;
}

function modifyUser(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forModifyUser&amp;qry1=&amp;qry2=";
    document.forms["listForm"].submit();
    return true;
}

function modifyRights(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forModifyRights&amp;qry1=&amp;qry2="
    document.forms["listForm"].submit();
}

function checkSelectNum(){
    var selectObj=document.getElementsByName("selectdUser");
    var num=0;
    var delflag="0";
    for(var i=0;i&lt;selectObj.length&amp;&amp;num&lt;2;i++){
       if(selectObj[i].checked){
       	 var userinfo=selectObj[i].value;
       	 var firstindex=userinfo.indexOf(":")+1;
         delflag=userinfo.substring(firstindex,firstindex+1);
         num++;
       }
    }
    if(num==1){
    	if(delflag==2){
    		showMsg("该用户已被停用，不允许修改！","error",1);
    		_checkButton(document.listForm,false); 
   		    return false;
    	}
    }
    if(num&gt;=2){
      showMsg("对不起，只能选择一条数据！","error",1);
      _checkButton(document.listForm,false); 
      return false;
    }else if(num==0){
      showMsg("对不起，您未选择任何数据！","error",1);
      _checkButton(document.listForm,false); 
      return false;
    }else{
      return true;
    }
}

//--&gt;
&lt;/script&gt;
&lt;/head&gt;

&lt;body &gt;
&lt;form name="listForm" action="" method="post"&gt; 
			&lt;table border="0" cellspacing="1" cellpadding="0" width="100%" style="background-color:#f7fcff;"&gt;
			    &lt;tr class="text01"&gt;
                   &lt;td height="18" width="85%"  valign="middle"&gt;
                     &lt;img src="/asone/images/currentpositionbg.jpg" width="8" height="18" id="positionimg"/&gt;
                     &lt;div class="currentposition"&gt;
                       &lt;strong&gt;&amp;nbsp;当前位置：用户角色管理-&amp;gt;业务操作员维护&lt;/strong&gt;
                     &lt;/div&gt;
                   &lt;/td&gt;
                   &lt;td  class="currentposition" align="right"&gt;&lt;/td&gt;
                &lt;/tr&gt;          
				&lt;tr&gt;
					&lt;td colspan="2" height="25" width="85%"&gt;
						&lt;div id="query01" style="border-bottom: 1px solid #5C81A7;" class="text01"&gt;
						&lt;table width="100%" border="0" cellspacing="1" cellpadding="0" style="background-color:#f7fcff;"&gt;
                         &lt;tr&gt;                     	
                           &lt;td width="20%"&gt;
                                  用户代码&amp;nbsp;&lt;input name="userCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户代码" class="queryinput" fieldTitle="用户代码" fieldType="hasSpecialChar" maxlength="10" tabindex="1" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  用户名称&amp;nbsp;&lt;input name="userName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户名称"  class="queryinput" fieldTitle="用户名称" fieldType="hasSpecialChar" maxlength="40" tabindex="2" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                              &lt;input type="button" name="btnQuery" value="查询(Q)" class="button" accesskey="Q" onclick="return queryUser();"  tabindex="3"&gt; 
				           &lt;/td&gt;
				           &lt;/tr&gt;
				           &lt;tr&gt;
				           &lt;td width="20%"&gt;
                                  应用代码&amp;nbsp;&lt;input name="appCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用代码" class="queryinput" fieldTitle="应用代码" fieldType="hasSpecialChar" maxlength="10" tabindex="3" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  应用名称&amp;nbsp;&lt;input name="appName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用名称"  class="queryinput" fieldTitle="应用名称" fieldType="hasSpecialChar" maxlength="40" tabindex="4" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                         &lt;/tr&gt;
                         &lt;/table&gt;
                         &lt;/div&gt;
					&lt;/td&gt;						
				&lt;/tr&gt;
				&lt;tr&gt;
	            &lt;td&gt;
	             &lt;div&gt;
	               &lt;input type="button" name="btnAdd" value="增加(A)" class="button" style="width:90px" accesskey="A" onclick="return addUser();" tabindex="4" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyUser" value="修改用户(U)" class="button" style="width:90px" accesskey="U" onclick="return modifyUser();" tabindex="5" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyRights" value="修改权限(P)" class="button" style="width:90px" accesskey="P" onclick="return modifyRights();" tabindex="6" onkeydown="_afterEnter();"&gt;
	             &lt;/div&gt;
	            &lt;/td&gt;
	            &lt;/tr&gt;
	            &lt;tr&gt;
	              &lt;td&gt;
	                &lt;div id="msg" style="display:none"&gt;&lt;/div&gt;
	              &lt;/td&gt;
	            &lt;/tr&gt;	
				&lt;tr&gt;
					&lt;td colspan="2" class="text01"&gt;						  		    
						&lt;div id="primarydata" style="width:100%;height:100%;border:1px solid #9CC6F7"&gt;
							&lt;table width="100%" id="listTable" border="0" cellpadding="0" cellspacing="1" bgcolor="#9CC6F7"&gt;
								&lt;tr class="text01"&gt;	
								&lt;th  align="center" class="text01" width="5%"&gt;选择&lt;/th&gt;			
						        &lt;th  align="center" class="text01" width="7%" &gt;用户代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;机构代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="9%" &gt;用户名称&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="40%" &gt;应用列表&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;删除标志&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="10%" &gt;联系电话&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="14%" &gt;邮箱地址&lt;/th&gt;
					            &lt;/tr&gt;
				                					              
					        &lt;/table&gt;
						&lt;/div&gt;	
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr&gt;
		&lt;td colspan="3"&gt;
			
			



 




	
	&lt;div id="pagezone" class="pagination"&gt;
		&lt;ul&gt;			
			&lt;li class="firstpage"&gt;&lt;input type="hidden" name="curPageNum" value=""&gt;第 1 页&lt;/li&gt;
			
				&lt;li class="firstpage" &gt;&amp;nbsp;&amp;nbsp;&lt;a href="#" disabled&gt;首&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
				&lt;li class="nextpage"  &gt;&lt;a href="#" disabled&gt;上一页&lt;/a&gt;&lt;/li&gt;				
						
			&lt;li class="nextpage" onclick="nextPage('/asone/servlet/UserServlet?method=search','2');"&gt;&lt;a name="nextpage" href="#"&gt;下一页&lt;/a&gt;&lt;/li&gt;
			&lt;li class="endpage" onclick="nextPage('/asone/servlet/UserServlet?method=search',0);"&gt;&lt;a name="endpage" href="#"&gt;尾&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;

&lt;script language="javascript"&gt;	
	&lt;!--如果页面中的记录数小于$per_Page_Size+1，则补空行--&gt;
	initList(10);	
&lt;/script&gt;
 
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;
_checkButton(document.listForm,false); 
document.body.onload=function(){
	document.all.userCode.focus();
}

    showMsg("业务操作员增加成功.","info","0");

&lt;/script&gt;
&lt;/html&gt;</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>8735</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>312</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.864+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>350</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.864+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.864+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>383</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.864+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.864+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>381</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:00.864+08:00</startedDateTime>
			<time>16</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/page.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>375</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"4209-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=95</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>4209</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//判断是否已经是最后一页的标志,0表示尚未到达最后一页，1表示已经到达最后一页
var pageBool = '0';

//向前分页
function previousPage(formAction, curPageNum ){
	toPage(formAction,  curPageNum );
}

//向前分页
function nextPage(formAction,  curPageNum  ){
	//如果已经到达最后一页了，则不再执行。
	if(pageBool=='1'){
		return false;
	}
	toPage(formAction,  curPageNum);
}

//跳转到第几页
function toPage(formAction,  curPageNum ){
	if( !checkPage() ){
		return;
	}
	document.all.curPageNum.value=curPageNum;
	if(formAction!=""){
		document.forms[0].action=formAction;
	}
	document.forms[0].submit();
}
//对分页查询条件进行校验，需要根据实际情况重写，默认恒返回true
function checkPage(){
	return true;
}
//将列表补全
function initList( perPageSize ){
	var rowLength = listTable.rows.length-1;
	if( rowLength&lt;=perPageSize*1 ){
		document.all.nextpage.disabled="true";
		document.all.endpage.disabled="true";
		//若需要补全列表，则表名已经到达最后一页了。
		pageBool='1';
		for( var i=0 ; i&lt;perPageSize*1-rowLength+1 ; i++ ){
			var rowObj = listTable.insertRow();
			rowObj.className="listdata";
			for( var j=0 ; j&lt;listTable.rows[ 0 ].cells.length ; j++ ){
				var cellObj=rowObj.insertCell();
			}
		}
	}
	&lt;!--将$per_Page_Size+1条记录，隐藏显示--&gt;
	var rowObj=listTable.rows;
	if(rowObj.length==perPageSize+2){
		rowObj[perPageSize+1].style.display="none";
	}
}

/**
 * 弹出模式窗体
 * @param url 地址
 * @param obj 参数
 * @param dialogWidth IE7宽度
 * @param dialogHeight IE7高度
 * @return 返回结果
 */
function modalDialog(url,obj,dialogWidth,dialogHeight){
	dialogWidth=ieX(dialogWidth);
	dialogHeight=ieY(dialogHeight);
	return window.showModalDialog(url,obj,"dialogWidth:" + dialogWidth + "px; dialogHeight:" + dialogHeight + "px; help:no; status:0");
}
/**
 * 弹出窗口功能
 * @param url 弹出窗口的url
 * @param name 弹出窗口的名称
 * @return 返回当前浏览器版本所需要的宽度
 */
function openWin(url,name,iWidth,iHeight){
	var url;
	var name;
    if (iWidth==null){
		iWidth=400;
	}
	if (iHeight==null){
		iHeight=300;
	}
	_open(url,name,iWidth,iHeight);
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function _open(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  iWidth = ieX(iWidth);                          //弹出窗口的宽度;
  iHeight = ieY(iHeight);                     //弹出窗口的高度;
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  window.open(url,name,'height='+iHeight+',,innerHeight='+iHeight+',width='+iWidth+',innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
/**
 * 处理弹出窗口的宽度
 * @param n IE7宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n IE7高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}</text>
				</content>
				<redirectionURL/>
				<headersSize>179</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>16</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:08.914+08:00</startedDateTime>
			<time>296</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>49</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>forAdd</value>
					</param>
					<param>
						<name>userCode</name>
						<value/>
					</param>
					<param>
						<name>userName</name>
						<value/>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>userCode=&amp;userName=&amp;appCode=&amp;appName=&amp;curPageNum=</text>
				</postData>
				<headersSize>972</headersSize>
				<bodySize>49</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:33:19 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=gbk</value>
					</header>
				</headers>
				<content>
					<size>17037</size>
					<mimeType>text/html;charset=gbk</mimeType>
					<text>









 

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=gbk"&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;

&lt;script language="javascript"&gt;
&lt;!--

function returnUser(){
	//window.location.href="/asone/servlet/UserServlet?method=search&amp;userCode=&amp;userName=";
	window.location.href="/asone/servlet/UserServlet?method=search";
}

function addUser(){  
    //检测初始密码长度，长度为且仅为8位
   /*if(!checkInitPasswordLength()){
      alert("[初始密码]长度必须为8位！");
      return false;
    }*/
   if(!_check(document.detailForm)){
      return false;
    } 
    /*
     * 将已分配的角色列表选定提交，否则在服务器段无法
     * 获得已分配的角色列表数据
     */
    var distriObj=document.all("distriRoles");
    for(var i=0;i&lt;distriObj.length;i++){
       distriObj.options[i].selected=true;
    }
    
    
    
    /*
     * 提交表单
     */ 
    document.forms["detailForm"].action="/asone/servlet/UserServlet?method=add";
    document.forms["detailForm"].submit();
}

function checkInitPasswordLength(){
   var initPwdObj=document.all("initPwd");
   if(initPwdObj!=null){
      if(initPwdObj.value.length!=0&amp;&amp;initPwdObj.value.length!=8){
        return false;
      }else{
        return true;
      }
   }
}
//单选角色、全选角色、单删角色、全删角色
function moveItems( src , dest , bool ){
	var srcObj=document.all( src );
	var destObj=document.all( dest );
	
	for(va明细数据下载&lt;/option&gt;  
      
        &lt;option value="CFAZB001"&gt;（CFAZ）银行自身业务外债操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB002"&gt;（CFAZ）银行自身业务对外担保操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB003"&gt;（CFAZ）银行自身业务国内外汇贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB004"&gt;（CFAZ）银行自身业务境外担保项下境内贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB005"&gt;（CFAZ）银行自身业务外汇质押人民币贷款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB006"&gt;（CFAZ）银行自身商业银行人民币结构性存款操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB007"&gt;（CFAZ）银行自身业务存量信息管理操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB008"&gt;（CFAZ）银行自身业务接口数据应急处理操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB009"&gt;（CFAZ）银行自身金融机构资产负债项目月报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB010"&gt;（CFAZ）银行代客业务股权激励报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB011"&gt;（CFAZ）银行代客业务RQFII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB012"&gt;（CFAZ）银行代客业务QFII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB013"&gt;（CFAZ）银行代客业务QDII报表操作员&lt;/option&gt;  
      
        &lt;option value="CFAZB015"&gt;（CFAZ）期货报表填报&lt;/option&gt;  
      
        &lt;option value="GJSHB003"&gt;（GJSH）业务主管&lt;/option&gt;  
      
        &lt;option value="GJSHB004"&gt;（GJSH）经办员 &lt;/option&gt;  
      
        &lt;option value="GJSHB005"&gt;（GJSH）业务管理员&lt;/option&gt;  
      
        &lt;option value="GJSHB006"&gt;（GJSH）只能办结汇业务的经办员  &lt;/option&gt;  
      
        &lt;option value="GJSHB007"&gt;（GJSH）只能办购汇业务的经办员&lt;/option&gt;  
      
        &lt;option value="ICWDB001"&gt;（ICWD）个人外币现钞存取数据填报角色&lt;/option&gt;  
      
        &lt;option value="ICWDB002"&gt;（ICWD）个人外币现钞存取数据查询&lt;/option&gt;  
      
        &lt;option value="IFALB001"&gt;（IFAL）对外金融资产负债及交易数据填报角色&lt;/option&gt;  
      
        &lt;option value="IFALB002"&gt;（IFAL）对外金融资产负债及交易数据查询角色&lt;/option&gt;  
      
        &lt;option value="INFOB001"&gt;（INFO）INFO银行业务员&lt;/option&gt;  
      
        &lt;option value="INFOB002"&gt;（INFO）INFO银行信息员&lt;/option&gt;  
      
        &lt;option value="IYJTB001"&gt;（IYJT）IYJT各地自主选择报表报送&lt;/option&gt;  
      
        &lt;option value="IYJTB002"&gt;（IYJT）IYJT全国统一报表报送&lt;/option&gt;  
      
        &lt;option value="IYJTB003"&gt;（IYJT）IYJT各地自主选择报表查询&lt;/option&gt;  
      
        &lt;option value="IYJTB004"&gt;（IYJT）IYJT全国统一报表查询&lt;/option&gt;  
      
        &lt;option value="IYJTB005"&gt;（IYJT）IYJT机构信息&lt;/option&gt;  
      
        &lt;option value="IYTCB001"&gt;（IYTC）IYTC数据录入&lt;/option&gt;  
      
        &lt;option value="IYTCB002"&gt;（IYTC）IYTC多日查询&lt;/option&gt;  
      
        &lt;option value="IZZTB001"&gt;（IZZT）IZZT银行数据填报&lt;/option&gt;  
      
        &lt;option value="JGXCB001"&gt;（JGXC）机构外币现钞数据报送&lt;/option&gt;  
      
        &lt;option value="JGXCB002"&gt;（JGXC）机构外币现钞数据查询&lt;/option&gt;  
      
        &lt;option value="JSHBB001"&gt;（JSHB）银行结汇业务操作员&lt;/option&gt;  
      
        &lt;option value="JSHBB002"&gt;（JSHB）银行购汇业务操作员&lt;/option&gt;  
      
        &lt;option value="JSHBB003"&gt;（JSHB）账户内结售汇接口数据应急处理操作员&lt;/option&gt;  
      
        &lt;option value="PCISB001"&gt;（PCIS）外币现钞业务主管&lt;/option&gt;  
      
        &lt;option value="PCISB002"&gt;（PCIS）外币现钞业务经办&lt;/option&gt;  
      
        &lt;option value="PMISB001"&gt;（PMIS）结售汇业务主管&lt;/option&gt;  
      
        &lt;option value="PMISB002"&gt;（PMIS）结售汇业务经办&lt;/option&gt;  
      
        &lt;option value="TMSBB001"&gt;（TMSB）货物贸易外汇网上业务 &lt;/option&gt;  
      
     &lt;!-- 整个form提交时该隐藏域不进行提交因此该隐藏域放置到form外面&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt; --&gt;
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;td align="center" width="8%"&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , false );" value=" &amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiDistri" onclick="moveItems( 'nonDistriRoles' , 'distriRoles' , true );" value=" &amp;gt;&amp;gt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="singleNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , false );" value=" &amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="button" class="button" style="border-right:#000000 solid 1px;border-bottom:#000000 solid 1px;" name="multiNonDistri" onclick="moveItems( 'distriRoles' , 'nonDistriRoles' , true );" value=" &amp;lt;&amp;lt; "&gt;&lt;br&gt;&lt;br&gt;
    &lt;/td&gt;
    &lt;td width="46%"&gt;
      已分配的角色列表：&lt;br&gt;
      &lt;select name="distriRoles" multiple="multiple" size="10" style="width:100%;height:150px;height: 230px" &gt;
      
      &lt;/select&gt;
    &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/fieldset&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;input type="hidden" name="hid" value="ACCBB001%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%21ACCBB002%3D%D2%F8%D0%D0%D5%CB%BB%A7%CA%FD%BE%DD%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB001%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21BZBOB002%3D%BD%F0%C8%DA%BB%FA%B9%B9%D2%B5%CE%F1%CD%B3%BC%C6%D4%B1%21BZBOB003%3D%D2%F8%D0%D0%CD%F8%C9%CF%C9%EA%B1%A8%B9%DC%C0%ED%D4%B1%21BZBOH005%3D%BA%CB%B2%E9%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CARDH001%3D%D2%F8%D0%D0%BF%A8%CF%B5%CD%B3%D2%B5%CE%F1%BE%AD%B0%EC%21CFABB001%3D%D2%F8%D0%D0%D2%B5%CE%F1%B4%FA%C2%EB%B2%E9%D1%AF%D4%B1%21CFABB002%3D%D2%F8%D0%D0%B6%EE%B6%C8%B2%E9%D1%AF%D4%B1%21CFABB003%3D%D2%F8%D0%D0%BF%D8%D6%C6%D0%C5%CF%A2%B2%E9%D1%AF%D4%B1%21CFABB004%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%BA%CB%D7%A2%D4%B1%21CFABB005%3D%D2%F8%D0%D0%BA%CB%D7%BC%BC%FE%B2%E9%D1%AF%D4%B1%21CFABB007%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21CFABB008%3D%D0%AD%D2%E9%B5%C7%BC%C7%D2%B5%CE%F1%B8%B4%BA%CB%D4%B1%21CFABB009%3D%D2%F8%D0%D0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%D4%B1%21CFABB010%3DFDI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB011%3D%D2%F8%D0%D0%D7%D4%C9%ED%CA%FD%BE%DD%D6%CA%C1%BF%BC%E0%BF%D8%B2%E9%D1%AF%D4%B1%21CFABB012%3D%D2%F8%D0%D0%BD%BB%D2%D7%D0%C5%CF%A2%B2%B9%C2%BC%B2%D9%D7%F7%D4%B1%21CFABB014%3DODI%B4%E6%C1%BF%C8%A8%D2%E6%B2%D9%D7%F7%D4%B1%21CFABB017%3D%BE%B3%CD%E2%BB%FA%B9%B9%BE%B3%C4%DA%B7%A2%D0%D0%D5%AE%C8%AF%B2%D9%D7%F7%D4%B1%21CFABH015%3D%CD%E2%D5%AE%B1%A8%B1%ED%C3%F7%CF%B8%CA%FD%BE%DD%CF%C2%D4%D8%21CFAZB001%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%D5%AE%B2%D9%D7%F7%D4%B1%21CFAZB002%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B6%D4%CD%E2%B5%A3%B1%A3%B2%D9%D7%F7%D4%B1%21CFAZB003%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B9%FA%C4%DA%CD%E2%BB%E3%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB004%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BE%B3%CD%E2%B5%A3%B1%A3%CF%EE%CF%C2%BE%B3%C4%DA%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB005%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%CD%E2%BB%E3%D6%CA%D1%BA%C8%CB%C3%F1%B1%D2%B4%FB%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB006%3D%D2%F8%D0%D0%D7%D4%C9%ED%C9%CC%D2%B5%D2%F8%D0%D0%C8%CB%C3%F1%B1%D2%BD%E1%B9%B9%D0%D4%B4%E6%BF%EE%B2%D9%D7%F7%D4%B1%21CFAZB007%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%B4%E6%C1%BF%D0%C5%CF%A2%B9%DC%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB008%3D%D2%F8%D0%D0%D7%D4%C9%ED%D2%B5%CE%F1%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21CFAZB009%3D%D2%F8%D0%D0%D7%D4%C9%ED%BD%F0%C8%DA%BB%FA%B9%B9%D7%CA%B2%FA%B8%BA%D5%AE%CF%EE%C4%BF%D4%C2%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB010%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1%B9%C9%C8%A8%BC%A4%C0%F8%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB011%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1RQFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB012%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QFII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB013%3D%D2%F8%D0%D0%B4%FA%BF%CD%D2%B5%CE%F1QDII%B1%A8%B1%ED%B2%D9%D7%F7%D4%B1%21CFAZB015%3D%C6%DA%BB%F5%B1%A8%B1%ED%CC%EE%B1%A8%21GJSHB003%3D%D2%B5%CE%F1%D6%F7%B9%DC%21GJSHB004%3D%BE%AD%B0%EC%D4%B1+%21GJSHB005%3D%D2%B5%CE%F1%B9%DC%C0%ED%D4%B1%21GJSHB006%3D%D6%BB%C4%DC%B0%EC%BD%E1%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1++%21GJSHB007%3D%D6%BB%C4%DC%B0%EC%B9%BA%BB%E3%D2%B5%CE%F1%B5%C4%BE%AD%B0%EC%D4%B1%21ICWDB001%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21ICWDB002%3D%B8%F6%C8%CB%CD%E2%B1%D2%CF%D6%B3%AE%B4%E6%C8%A1%CA%FD%BE%DD%B2%E9%D1%AF%21IFALB001%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%CC%EE%B1%A8%BD%C7%C9%AB%21IFALB002%3D%B6%D4%CD%E2%BD%F0%C8%DA%D7%CA%B2%FA%B8%BA%D5%AE%BC%B0%BD%BB%D2%D7%CA%FD%BE%DD%B2%E9%D1%AF%BD%C7%C9%AB%21INFOB001%3DINFO%D2%F8%D0%D0%D2%B5%CE%F1%D4%B1%21INFOB002%3DINFO%D2%F8%D0%D0%D0%C5%CF%A2%D4%B1%21IYJTB001%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB002%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B1%A8%CB%CD%21IYJTB003%3DIYJT%B8%F7%B5%D8%D7%D4%D6%F7%D1%A1%D4%F1%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB004%3DIYJT%C8%AB%B9%FA%CD%B3%D2%BB%B1%A8%B1%ED%B2%E9%D1%AF%21IYJTB005%3DIYJT%BB%FA%B9%B9%D0%C5%CF%A2%21IYTCB001%3DIYTC%CA%FD%BE%DD%C2%BC%C8%EB%21IYTCB002%3DIYTC%B6%E0%C8%D5%B2%E9%D1%AF%21IZZTB001%3DIZZT%D2%F8%D0%D0%CA%FD%BE%DD%CC%EE%B1%A8%21JGXCB001%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B1%A8%CB%CD%21JGXCB002%3D%BB%FA%B9%B9%CD%E2%B1%D2%CF%D6%B3%AE%CA%FD%BE%DD%B2%E9%D1%AF%21JSHBB001%3D%D2%F8%D0%D0%BD%E1%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB002%3D%D2%F8%D0%D0%B9%BA%BB%E3%D2%B5%CE%F1%B2%D9%D7%F7%D4%B1%21JSHBB003%3D%D5%CB%BB%A7%C4%DA%BD%E1%CA%DB%BB%E3%BD%D3%BF%DA%CA%FD%BE%DD%D3%A6%BC%B1%B4%A6%C0%ED%B2%D9%D7%F7%D4%B1%21PCISB001%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%D6%F7%B9%DC%21PCISB002%3D%CD%E2%B1%D2%CF%D6%B3%AE%D2%B5%CE%F1%BE%AD%B0%EC%21PMISB001%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%D6%F7%B9%DC%21PMISB002%3D%BD%E1%CA%DB%BB%E3%D2%B5%CE%F1%BE%AD%B0%EC%21TMSBB001%3D%BB%F5%CE%EF%C3%B3%D2%D7%CD%E2%BB%E3%CD%F8%C9%CF%D2%B5%CE%F1+"&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;


function describeRole(){
	window.open("/asone/jsp/user/userAddUrl.jsp","roleWin" ,"height=700,width=600,left=150,top=0,toolbar=no,menubar=no,scrollbars=yes,resizable=no");
}
&lt;/script&gt;
&lt;/html&gt;
</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>17037</bodySize>
			</response>
			<cache/>
			<timings>
				<send>62</send>
				<wait>172</wait>
				<receive>62</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:09.148+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>373</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:09.148+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>406</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:09.148+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:09.148+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>404</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:09.148+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>400</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:41.970+08:00</startedDateTime>
			<time>265</time>
			<request>
				<method>POST</method>
				<url>http://asone.safe/asone/servlet/UserServlet?method=add</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>ASONEADDR</name>
						<value>http://asone.safe:80/asone</value>
					</cookie>
					<cookie>
						<name>LTPAToken</name>
						<value>PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+</value>
					</cookie>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
					</cookie>
					<cookie>
						<name>asone</name>
						<value>20111291</value>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/html, application/xhtml+xml, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>application/x-www-form-urlencoded</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>185</value>
					</header>
					<header>
						<name>DNT</name>
						<value>1</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Cache-Control</name>
						<value>no-cache</value>
					</header>
					<header>
						<name>Cookie</name>
						<value>ASONEADDR=http://asone.safe:80/asone; LTPAToken=PExUUEFUb2tlbj48dXNlckNvZGU+YmE8L3VzZXJDb2RlPjxvcmdDb2RlPjQ0MDcwMDAzNjYwMDwvb3JnQ29kZT48dXNlck5hbWU+Z3Vvaml5ZXd1YnU8L3VzZXJOYW1lPjxvcmdUeXBlPjI8L29yZ1R5cGU+PHRlbD4lMkI8L3RlbD48c3NvU2VydmVyVGltZT4xNTEyNDMzNDcxMzM3PC9zc29TZXJ2ZXJUaW1lPjxzc29DbGllbnRUaW1lPjE1MTI0MzM0NzEzMzc8L3Nzb0NsaWVudFRpbWU+PC9MVFBBVG9rZW4+; JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; asone=20111291</value>
					</header>
				</headers>
				<queryString>
					<param>
						<name>method</name>
						<value>add</value>
					</param>
				</queryString>
				<postData>
					<mimeType>application/x-www-form-urlencoded</mimeType>
					<text>rand=9972&amp;userCode=0060240&amp;userName=%C1%D6%C7%EF%D1%C5&amp;orgCode=440700036600&amp;orgType=2&amp;tel=0750-3168081&amp;email=xiest@rhebank.com&amp;initPwd=123456Gj&amp;distriRoles=PCISB002&amp;distriRoles=PMISB002</text>
				</postData>
				<headersSize>973</headersSize>
				<bodySize>185</bodySize>
			</request>
			<response>
				<status>200</status>
				<statusText>OK</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies>
					<cookie>
						<name>JSESSIONID</name>
						<value>40f46ffda9e83cc96199d31f55af.worker5</value>
						<path>/asone</path>
						<domain/>
						<httpOnly>false</httpOnly>
						<_secure>false</_secure>
					</cookie>
				</cookies>
				<headers>
					<header>
						<name>Date</name>
						<value>Tue, 05 Dec 2017 02:33:52 GMT</value>
					</header>
					<header>
						<name>Server</name>
						<value>Apache/2.2.23 (Unix) mod_jk/1.2.37</value>
					</header>
					<header>
						<name>X-Powered-By</name>
						<value>JSP/2.1</value>
					</header>
					<header>
						<name>Set-Cookie</name>
						<value>JSESSIONID=40f46ffda9e83cc96199d31f55af.worker5; Path=/asone</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Connection</name>
						<value>Keep-Alive</value>
					</header>
					<header>
						<name>Transfer-Encoding</name>
						<value>chunked</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/html;charset=GBK</value>
					</header>
				</headers>
				<content>
					<size>7573</size>
					<mimeType>text/html;charset=GBK</mimeType>
					<text>








&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 4.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=GBK" /&gt;
&lt;title&gt;业务操作员维护&lt;/title&gt;
&lt;link href="/asone/css/style.css" rel="stylesheet" type="text/css" /&gt;

&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/common.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/customString.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/verify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/formVerify.js"&gt;&lt;/script&gt;
&lt;script language="JavaScript" type="text/javascript" src="/asone/javascript/page.js"&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;
&lt;!--
function queryUser(){
	_checkButton(document.listForm,true); 
    if(!_check(document.listForm)){
	    _checkButton(document.listForm,false); 
	    return false;
    }
	document.forms["listForm"].action="/asone/servlet/UserServlet?method=search";	
	document.forms["listForm"].submit();
	return true;
}

function addUser(){
	_checkButton(document.listForm,true); 
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forAdd&amp;userCode=&amp;userName=";
    document.forms["listForm"].submit();
    return true;
}

function modifyUser(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?method=forModifyUser&amp;qry1=&amp;qry2=";
    document.forms["listForm"].submit();
    return true;
}

function modifyRights(){
	_checkButton(document.listForm,true); 
    //检测所选数据条数是否仅一条
    if(!checkSelectNum()){
    _checkButton(document.listForm,false); 
      return false;
    }
    document.forms["listForm"].action="/asone/servlet/UserServlet?metround-color:#f7fcff;"&gt;
			    &lt;tr class="text01"&gt;
                   &lt;td height="18" width="85%"  valign="middle"&gt;
                     &lt;img src="/asone/images/currentpositionbg.jpg" width="8" height="18" id="positionimg"/&gt;
                     &lt;div class="currentposition"&gt;
                       &lt;strong&gt;&amp;nbsp;当前位置：用户角色管理-&amp;gt;业务操作员维护&lt;/strong&gt;
                     &lt;/div&gt;
                   &lt;/td&gt;
                   &lt;td  class="currentposition" align="right"&gt;&lt;/td&gt;
                &lt;/tr&gt;          
				&lt;tr&gt;
					&lt;td colspan="2" height="25" width="85%"&gt;
						&lt;div id="query01" style="border-bottom: 1px solid #5C81A7;" class="text01"&gt;
						&lt;table width="100%" border="0" cellspacing="1" cellpadding="0" style="background-color:#f7fcff;"&gt;
                         &lt;tr&gt;                     	
                           &lt;td width="20%"&gt;
                                  用户代码&amp;nbsp;&lt;input name="userCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户代码" class="queryinput" fieldTitle="用户代码" fieldType="hasSpecialChar" maxlength="10" tabindex="1" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  用户名称&amp;nbsp;&lt;input name="userName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="用户名称"  class="queryinput" fieldTitle="用户名称" fieldType="hasSpecialChar" maxlength="40" tabindex="2" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                              &lt;input type="button" name="btnQuery" value="查询(Q)" class="button" accesskey="Q" onclick="return queryUser();"  tabindex="3"&gt; 
				           &lt;/td&gt;
				           &lt;/tr&gt;
				           &lt;tr&gt;
				           &lt;td width="20%"&gt;
                                  应用代码&amp;nbsp;&lt;input name="appCode" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用代码" class="queryinput" fieldTitle="应用代码" fieldType="hasSpecialChar" maxlength="10" tabindex="3" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                           &lt;td width="20%"&gt;
                                  应用名称&amp;nbsp;&lt;input name="appName" value="" type="text" fieldType="hasSpecialCharForSearch" fieldTitle="应用名称"  class="queryinput" fieldTitle="应用名称" fieldType="hasSpecialChar" maxlength="40" tabindex="4" Onkeydown="afterEnter();"&gt;
                           &lt;/td&gt;
                         &lt;/tr&gt;
                         &lt;/table&gt;
                         &lt;/div&gt;
					&lt;/td&gt;						
				&lt;/tr&gt;
				&lt;tr&gt;
	            &lt;td&gt;
	             &lt;div&gt;
	               &lt;input type="button" name="btnAdd" value="增加(A)" class="button" style="width:90px" accesskey="A" onclick="return addUser();" tabindex="4" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyUser" value="修改用户(U)" class="button" style="width:90px" accesskey="U" onclick="return modifyUser();" tabindex="5" Onkeydown="_afterEnter();"&gt;
	               &lt;input type="button" name="btnModifyRights" value="修改权限(P)" class="button" style="width:90px" accesskey="P" onclick="return modifyRights();" tabindex="6" onkeydown="_afterEnter();"&gt;
	             &lt;/div&gt;
	            &lt;/td&gt;
	            &lt;/tr&gt;
	            &lt;tr&gt;
	              &lt;td&gt;
	                &lt;div id="msg" style="display:none"&gt;&lt;/div&gt;
	              &lt;/td&gt;
	            &lt;/tr&gt;	
				&lt;tr&gt;
					&lt;td colspan="2" class="text01"&gt;						  		    
						&lt;div id="primarydata" style="width:100%;height:100%;border:1px solid #9CC6F7"&gt;
							&lt;table width="100%" id="listTable" border="0" cellpadding="0" cellspacing="1" bgcolor="#9CC6F7"&gt;
								&lt;tr class="text01"&gt;	
								&lt;th  align="center" class="text01" width="5%"&gt;选择&lt;/th&gt;			
						        &lt;th  align="center" class="text01" width="7%" &gt;用户代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;机构代码&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="9%" &gt;用户名称&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="40%" &gt;应用列表&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="8%" &gt;删除标志&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="10%" &gt;联系电话&lt;/th&gt;
						        &lt;th  align="center" class="text01" width="14%" &gt;邮箱地址&lt;/th&gt;
					            &lt;/tr&gt;
				                					              
					        &lt;/table&gt;
						&lt;/div&gt;	
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr&gt;
		&lt;td colspan="3"&gt;
			
			



 




	
	&lt;div id="pagezone" class="pagination"&gt;
		&lt;ul&gt;			
			&lt;li class="firstpage"&gt;&lt;input type="hidden" name="curPageNum" value=""&gt;第 1 页&lt;/li&gt;
			
				&lt;li class="firstpage" &gt;&amp;nbsp;&amp;nbsp;&lt;a href="#" disabled&gt;首&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
				&lt;li class="nextpage"  &gt;&lt;a href="#" disabled&gt;上一页&lt;/a&gt;&lt;/li&gt;				
						
			&lt;li class="nextpage" onclick="nextPage('/asone/servlet/UserServlet?method=search','2');"&gt;&lt;a name="nextpage" href="#"&gt;下一页&lt;/a&gt;&lt;/li&gt;
			&lt;li class="endpage" onclick="nextPage('/asone/servlet/UserServlet?method=search',0);"&gt;&lt;a name="endpage" href="#"&gt;尾&amp;nbsp;&amp;nbsp;页&lt;/a&gt;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;

&lt;script language="javascript"&gt;	
	&lt;!--如果页面中的记录数小于$per_Page_Size+1，则补空行--&gt;
	initList(10);	
&lt;/script&gt;
 
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;
_checkButton(document.listForm,false); 
document.body.onload=function(){
	document.all.userCode.focus();
}

    showMsg("业务操作员增加成功.","info","0");

&lt;/script&gt;
&lt;/html&gt;</text>
				</content>
				<redirectionURL/>
				<headersSize>318</headersSize>
				<bodySize>7573</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>187</wait>
				<receive>15</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:42.220+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/css/style.css</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>text/css, */*</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>350</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11769-1410542458000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=98</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/css</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11769</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:20:58 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/css</mimeType>
					<text>body {
	margin: 0px;
	background-color: #F4F9FF;
	FONT-SIZE: 12px; 
	FONT-FAMILY: "宋体"; 
}
.report {
	width: 100%; 
	border-top: 1px solid #9CC6F7;
	border-left: 1px solid #9CC6F7;
	border-right: 1px solid #9CC6F7;
	border-bottom: 1px solid #9CC6F7;
	height: 100%;
}

.white12 {
	font-size: 12px;
	color: #FFFFFF;
}
.text01 {
	font-size: 12px;
	color: #2A5E9B;
}
.text02 {
	font-size: 12px;
	color: black;
}
.message{
	font-size: 12px;
	color: red;
}
.input01 {
	font-size: 12px;
	background-color: #E8FFEE;
	border: 1px solid #73D08B;
}
.input02 {
	font-size: 12px;
	background-color: #DAEEFC;
	border: 1px solid #A5C4EB;
}
.input03 {
	font-size: 12px;
	background-color: #F0F0F0;
	border: 1px solid #C2C2C2;
	disable:false;
	readonly:true;
}
.checkboxinlist {
	width:10px;
}
.button{
	width:60px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
	cursor:hand;
}



.button01{
	width:120px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.button02{
	width:90px;
	height:16px;
	font-family:arial;
	font-size:10px;
	border:1px;
	border-top-color:#FFFFFF;
	border-left-color:#FFFFFF;
	border-right-color:#000000;
	border-bottom-color:#000000;
	background-color:#E6EDFC;
}

.listdata{
	background-color:#FFFFFF;
	height:25px;
	text-align: center;
	word-break:break-all;
	word-warp:warp;

	/*
	overflow:hidden;
	text-overflow:ellipsis;
	word-break:keep-all;	
	*/
}
.positionborder{	
	border-bottom: 1px solid #5C81A7;
}
th {
	background:url(../images/listbg.jpg) repeat;
	background-color:#FFFFFF;
	height:22px;
}
hr.info{
	color:#DDDDDD;
	height:1px;
}
hr.position{
	color:#5C81A7;
}
hr.split{
	color:#9CC6F7;
	height:1px;
}
span.memo{
	font-size: 11px;
	color: #000000;
}
td#navigation{
	width:124px; 
	float:left;
}
td#primary{
	padding-left:10px;
	padding-right:0px;
	padding-bottom:0px;
	padding-top:0px;
}
td#positionininfo{	

}
.currentposition{
	display:inline;
	vertical-align:middle;
	font-size:12px;
}
div#query{
	height:100%; 	
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#queryadvance{
	height:100%; 	
	background-color:#EEEEEE; 
	text-indent:18px; 
	line-height:25px; 
	padding-top:2px;
	vertical-align:middle; 
	color:#000000;
}
div#operation{
	height:100%; 
	background-color:#EEEEEF; 
	line-height:21px; 
	padding-top:2px;
}
div#primarydata{
	WIDTH:800px;
	POSITION:relative;
	OVERFLOW-X:scroll; 
	OVERFLOW-Y:hidden; 
	SCROLLBAR-ARROW-COLOR:#48b4fc;
	SCROLLBAR-BASE-COLOR:#D6E9FC;
	
	/*
	SCROLLBAR-FACE-COLOR: #000000; 
	SCROLLBAR-HIGHLIGHT-COLOR: #ffffff; 
	SCROLLBAR-SHADOW-COLOR: #919192;  
	SCROLLBAR-3DLIGHT-COLOR:#ffffff; LINE-HEIGHT: 100%; 
	SCROLLBAR-ARROW-COLOR: #919192; 
	SCROLLBAR-TRACK-COLOR: #ffffff; 
	SCROLLBAR-DARKSHADOW-COLOR: #ffffff;	
	*/
}

div#primaryinfo{
	
	padding-bottom:50px;
}
div#pagezone{
}

ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}
.mainnav {
	float: left;	
}
li ul li {	
	height:20px;
	width: 160%;	
	background-color:#ADCAFF;
	color:#000000;
}
li ul { 
	display: none;	
}
li:hover ul, li.over ul {
	display: block;
}
.mainnavlink{
	display:block;
	font-size:12px;
	border: 1px #ccc;
	padding:0px;
	text-decoration: none;
	color: #000000;
	line-height:20px;
	vertical-align:middle;
	text-indent:10px;
}
ul li a:hover{
	background-color:#666666;
	color: #FFFFFF;
}


input.queryinput{
	font-size: 12px;
	background-color: #FFFFFF;
	border: 1px solid #A5C4EB;
	margin-top:2px;
}

select option{
	background-color:#dae5f5;
}
select .blank{
	background-color:#FFFFFF;
}
select .title {
	background-color: #435269; 
	color: white;
}
select {
	font-size: 12px;
	height:20px;
	line-height:11px;
}

a.mainmenu1{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1selected{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#ffffff;
	display:block;
	width:100%;
	height:28px;
	background:url(../../images/navigationbg2.jpg) repeat;
	text-indent:0px;
	vertical-align: middle;
	text-align: center;
	line-height:28px;
}
a.mainmenu1:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu2:hover{
	background:url(../../images/navigationbg2.jpg) repeat;
}
a.mainmenu1:active{	
}
a.mainmenu2:active{	
}

a.navigationmenu{
	text-decoration:none;
	font-family:arial;
	font-size:12px;
	color:#003399;
	display:block;
	width:102px;
	height:25px;
	background:url(../../images/button-notselected.jpg) no-repeat;
	text-indent:5px;
	vertical-align: middle;
	text-align: left;
	line-height: 25px;
}
a.navigationmenu:hover{
	background:url(../../images/button-selected.jpg) no-repeat;
}
a.navigationmenu:active{	
}
a#help:hover{
	background-color:#FFFFFF;
}
img#buttonzoneimg{
	vertical-align:top;
}

/*  fanye  */

div.pagination{
	padding: 1px;
	text-align: right;
}

.pagination ul{
	margin: 0;
	padding: 0;
	text-align: right; /*Set to "right" to right align pagination interface*/
	font-size: 12px;
	display:inline;
}

.pagination li{
	list-style-type: none;
	display: inline;
}

.pagination a, .pagination a:visited{
	padding: 0 5px;
	border: 1px solid #9aafe5;
	text-decoration: none; 
	color: #2e6ab1;
}

.pagination a:hover, .pagination a:active{
	border: 1px solid #2b66a5;
	color: #000;
	background-color: lightyellow;
}

.pagination li.currentpage{
	font-weight: bold;
	padding: 0 5px;
	border: 1px solid navy;
	background-color: #2e6ab1;
	color: #FFF;
}

.pagination li.disablepage{
	padding: 0 5px;
	border: 1px solid #929292;
	color: #929292;
}

.pagination li.nextpage{
	font-weight: bold;
}

.pagination li.endpage{
}

.pagination li.gonum{
}

.pagination li.gobutton{
}

* html .pagination li.currentpage, * html .pagination li.disablepage{ /*IE 6 and below. Adjust non linked LIs slightly to account for bugs*/
margin-right: 5px;
padding-right: 0;
}
div#query01{
	height:expression(this.style.height&gt;=this.scrollHeight?this.style.height+'px':this.scrollHeight+'px');
	background-color:#EEEEEE; 
	border-top: 1px solid #5C81A7;
	border-bottom: 1px solid #5C81A7;
	text-indent:18px; 
	line-height:25px; 
	padding-top:0px;
	vertical-align:middle; 
	color:#000000;
	
}


.massage{
	border:#036 solid; 
	border-width:1 1 3 1; 
	width:95%; height:95%; 
	background:#fff; 
	color:#036; 
	font-size:12px; 
	line-height:150%
}
.header{
	background:#036; 
	height:10%; 
	font-family:Verdana, Arial, Helvetica, sans-serif; 
	font-size:12px; 
	padding:3 5 0 5; 
	color:#fff
}

.alertMessage{
	cursor:hand;
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:350px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1001; 
}

.fAlertMessage{
	position:absolute;
	left:expression((body.clientWidth-350)/2); 
	top:expression((body.clientHeight)/2);
	width:340px; 
	height:200px; 
	filter:dropshadow(color=#666666,offx=3,offy=3,positive=2); 
	z-index:1000; 
}
.showMessage{
	border:#9CC6F7 0px solid;
	cursor:hand;
	font-size:12px;
}

/*********新在样式*********/
#wrapper
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
	background: url(../images/background_1.jpg) repeat-x;
}
#wrapper_1
{
	width: 1000px; 
	background: #fff; 
	margin: 0 auto;  
	text-align: center;
}
#header
{
	background: url(../images/banner.jpg) no-repeat;
	width: 1000px;
	height:110px
}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
}
#contents
{
	width:1000px;
}
#contents .top
{
	background:url(../images/bk_top.gif) no-repeat;
	height:16px;
}
#contents .bottom
{
	background:url(../images/bk_bottom.gif) no-repeat;
	height:16px;
}
#contents .mid
{
	background:url(../images/bk_mid.gif) repeat-y;
}
#contents .mid .left
{
	float: left;
	/*with:530px;*/
	width: 580px;
	border-right: 1px dashed #999;
}
.gray
{
	color: #999;
}
.left .button
{
	background:url(../images/button.jpg) no-repeat;
	width:477px;
	height: 63px;
	margin-left:20px;
}
.left ul
{
	margin-left: 40px;
}
.left li
{
	list-style-image:url(../images/icon_1.gif);
	line-height: 20px;
}
.mid .left
{
	width: 500px;
	border-right: 1px dashed #999;
	text-align:left;
	margin-bottom: 10px;
}
.more{float: right; padding-right: 10px; line-height: 54px; color: #1665C4;font-size: 14px;}
#contents .mid .right
{
	float:right;
	/*width:350px;
	height: 176px;*/
	width:330px;
	height: 346px;
	background:url(../images/denlk.gif) no-repeat;
	padding-top:40px;
	text-align: left;
	padding-left: 30px;
	margin-right: 20px;
}
#contents .mid .right p
{
	padding-top: 8px;
}
#userLoginInfo input
{
	border: 1px solid #499cde;
	width: 180px;
}
#footer
{
	width:1000px;
	text-align: center;
	color: #999;
	margin-top: 3px;
}
#footer p
{
	line-height: 14px;
	font-size:12px; 
	margin: 0; 
	padding: 0;
}
.clear{clear: both;}
.blue
{
	color:#499cde;
	font-weight: bold;
	font-size:14px;
}

#userLoginInfo p{margin: 0; padding: 0;}
span, ul, li, dl, dt, dd, hr, h1, h2, h3, h4, h5, h6{	margin: 0; padding: 0;}

#header_1
{
	background: url(../images/banner_2.jpg) no-repeat;
	width: 100%;
	height:64px
}
a{color: #003980; text-decoration:none;}
a:hover{color: #004CAC; text-decoration: underline;}
.white{color: #fff; text-decoration:none;}
.white:hover{color: #fff; text-decoration: underline;}

.white1{FONT-SIZE: 12px; color: #fff; text-decoration:none;}
.white1:hover{color: #fff;}
#menu
{
	background:url(../images/bj.jpg) repeat-x;
	height: 21px;
	font-size:12px; 
}
.index_1
{
	text-align:left;
	font-size:12px;
}
.index_1 .button_1
{
	background:url(../images/button_1.jpg);
	width:521px;
	height:71px;
	margin-left:100px;
}
.index_1 ul
{
	text-align: left;
	/*margin-left:15%;*/
	/*padding-left:20px;*/
	float:left;
	position:relative;
	/*BORDER:thin solid darkgoldenrod;*/
}
.index_1 li
{
	/*list-style-image:url(../images/icon_2.gif);*/
	text-align: left;
	/*line-height: 23px;*/
	margin-bottom: 13px;
}
/*
.index_1 ul
{
	text-align: left;
	margin-left:350px;
}
.index_1 li
{
	list-style-image:url(../images/icon_2.gif);
	text-align: left;
	line-height:18px;
}
*/
.index_1 .zhuangs
{
	background:url(../images/bj_1.png);
	height:192px;
	width:449px;
}
.index_1 .applistview
{
	width:99%;
	HEIGHT:300px;
	POSITION:relative;
	OVERFLOW-Y:auto;
	scrollbar-darkshadow-color:threedhighlight;
	scrollbar-face-color:#F2F7FB
}
.blue_bj_1
{
	color:#89bcf1;
	background-color:#f7fcff;
}
.wrong{
	background: url(../images/denlk_w.jpg) no-repeat;
	width: 436px;
	height: 217px;
	padding-top:45px;
	text-align: left;
	padding-left: 10px;
	margin-left: 45%;
}
.wrong p
{
	padding-top: 90px;
	padding-left:20px;
}
.red
{
	color: #cb0101;
}
.left li.top{
	list-style-image:url(../images/icon_7.gif);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>174</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:42.220+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/common.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"13328-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>13328</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>function afterEnter(){
	if (window.event.keyCode==13) window.event.keyCode=9;
}
function firstFocus(obj){
	obj.focus();
}
function _selectAll(){
	var sa = document.getElementById("selectall");
	var sl = document.getElementsByName("selecteditem");
	if(sl!=null){
		if(sl.length&gt;0){
			if(sa.checked==true){
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=true;
				}
			}
			else{
				for(var i=0; i&lt;sl.length; i++){
					sl[i].checked=false;
				}
			}
		}
	}
}

function _resizeprimarydata() {
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth - 161;
}

function _hideNavigationMenu(){
	var posimg = document.getElementById('positionimg');
	posimg.src='../images/opennavigationmenu.gif';
	posimg.width=15;
	posimg.height=15;
	posimg.title="点击打开左侧导航菜单";
	posimg.alt="点击打开左侧导航菜单";
	
	document.getElementById('navigation').style.display="none";
	document.getElementById('primary').style.padding="0px";
	//document.getElementById('navigation').attachEvent("onclick", alert(3));
	document.getElementById('positionimg').onclick=function(){
		document.getElementById('navigation').style.display="";
		var posimg0 = document.getElementById('positionimg')
		posimg0.src='../images/currentpositionbg.jpg';
		posimg0.width=8;
		posimg0.height=18;
		posimg0.onclick=null;
		//document.getElementById('primary').style.padding="0px 0px 0px 10px";
	};
	
	if (window.screen) 	document.getElementById('primarydata').style.width = screen.availWidth;
}
function _showNavigationMenu(){
	document.getElementById('navigation').style.display="";
	
	_resizeprimarydata();
}
function _showQueryAdvance(){	
	if(document.getElementById('queryadvance').style.display=="none") {
		document.getElementById('queryadvance').style.display="";
		document.getElementById('querytypebutton').value="简单(D)";
	}else {
		document.getElementById('queryadvance').style.display="none";
		document.getElementById('querytypebutton').value="高级(D)";
	}
}
function sendURL(i)
{
	
	if(i==1)
	{
		
		window.location.href="domesticverification_index.html"
    }
	if(i==2)
	{
		window.location.href="domesticverification_hexiaoxinxixiugai.html"
	}
	if(i==3)
	{
		window.location.href="domesticverification_shenheyiwenfankui.html"
	}
	if(i==4)
	{
		window.location.href="domesticverification_hexiaoyiwenfankui.html"
	}	
	if(i==5)
	{
		window.location.href="domesticverification_hexiaoxinxishanchu.html"
	}	
	if(i==6)
	{
		window.location.href="domesticverification_hexiaoxinxichaxun.html"
	}	
	if(i==7)
	{
		window.location.href="domesticverification_yuqishujuchaxun.html"
	}	
	if(i==8)
	{
		window.location.href="domesticverification_tuihuishujuchaxun.html"
	}				
}
function startList() {
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav1");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav2");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav3");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav4");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}	
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav5");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}				
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav6");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav7");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
	
	if (document.all&amp;&amp;document.getElementById) {
		navRoot = document.getElementById("nav8");
		for (i=0; i&lt;navRoot.childNodes.length; i++) {
			node = navRoot.childNodes[i];
			if (node.nodeName=="LI") {
				node.onmouseover=function() {
					this.className+=" over";
				}
				node.onmouseout=function() {
					this.className=this.className.replace(" over", "");
				}
			}
		}
	}		
}

function _Delete(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要请示删除的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要请示删除的记录！");
        return;
   }
	
	if(confirm("您确定要进行请示删除吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _reject(URLstr){	
	var delID = document.getElementById("selecteditem");
	if(delID==null){
		alert("请选择要进行拒绝操作的记录！");
		return;
	}
	if(delID.length == null){
		delID = new Array(delID);
	}
	var bDelFlag = false;
	for(var i=0; i&lt;delID.length; i++) {
        if(delID[i].checked == true) {
            bDelFlag = true;
            break;
        }
	}
	if(bDelFlag == false) {
        alert("请选择要进行拒绝操作的记录！");
        return;
   }
	
	if(confirm("您确定要进行拒绝操作吗?")==false){
		return;
		}

	window.location.href=URLstr;
}
function _exporttoexcel(para) {
	if(para=="") {
		alert("请首先检索数据，再进行导出操作！");
		return;	
	}
	
	window.open('abroadreceipts.xls', '_blank');
}

function _exit() {
	
	window.close();
}

function _getCurrentDate(){
	var obj = new Date();
	var _month = obj.getMonth() + 1;
	var _date = obj.getDate() + 1;
	var _year = obj.getYear();
	return _year + "-" + _month + "-" + _date;
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function openWindow(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  var iWidth;                          //弹出窗口的宽度;
  var iHeight;                     //弹出窗口的高度;
  
 
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  
  iWidth = ieX(iWidth);             //修正一下窗口宽度，适应IE6和IE7
  iHeight = ieY(iHeight);           //修正一下窗口高度，适应IE6和IE7
  window.open(url,name,'height='+iHeight+'px,innerHeight='+iHeight+',width='+iWidth+'px,innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
 
 /**
 * 得到IE的版本
 */
 function getIEVersonNumber(){
    var ua = navigator.userAgent;
    var msieOffset = ua.indexOf("MSIE ");
    if(msieOffset &lt; 0)
    {
        return 0;
    }
    return parseFloat(ua.substring(msieOffset + 5, ua.indexOf(";", msieOffset)));
}
var ieVer = getIEVersonNumber();
/**
 * 处理弹出窗口的宽度
 * @param n 原IE6宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n 原IE6高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	if (ieVer&gt;=7){
		n = n-10
	}
	if (n&lt;0){
		n=0;
	}
	return n;
}

/**
 * 功能描述：实现全选or不全选
 * 输入参数：obj标题checkbox元素的this引用；objName记录checkbox元素的名称
 */
function selectAll(obj,objName){
    var isChecked=obj.checked;
    //alert(obj.name+"--"+isChecked);
	var objArr= document.getElementsByName(objName);
	if(isChecked==true){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==false &amp;&amp; checkObj.disabled==false){
		     checkObj.checked=true;
		  }
	    }
	    
	}else if(isChecked==false){
		for(var i=0;i&lt;objArr.length;i++){
		  var checkObj=objArr[i];
		  if(checkObj.checked==true){
		     checkObj.checked=false;
		  }
	    }
	}
}
/**
 * 功能描述：释放全选按钮，只要记录中任意一个checkbox元素没被选中，则列表checkbox变成未选。
 */
function releaseSelectAll(objID){
	var idObj=document.getElementById(objID);
	if(idObj.checked==true){
	   idObj.checked=false;
	}
}

/**
 * 判断用户是否在页面上选择了一个且仅有一个指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回true 否则返回false
 */
function hasSelectedOne(name) {
	var selElements = document.getElementsByName(name);
	var selected = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	return selected;
}

/**
 * 判断用户是否在页面上选择指定名称的复选框
 * @param name 单选和复选框的名称（name）
 * @param return 有一个或以上选中返回true 否则返回false
 */
function hasSelected(name,char) {
	var selectValue = "";
	var selElements = document.getElementsByName(name);
	var isSel = false;
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (char==null){
						return true;
					}else{
						if(selElements[i].value.indexOf(char)==-1){
							return false;
						}else{
							isSel=true;
						}
					}
				}
			}
			
		}
	}
	
	if (char==null){
		return false;
	}else{
		return isSel;
	}
}
/**
 * 判断用户是否选中一个记录，如果选中1个记录，返回选中的值，如果没有选中或者选中多个记录，返回false
 * @param name 单选和复选框的名称（name）
 * @param return 只有一个选中返回选择的值 否则返回false
 */
function selectValue(name){
	var selElements = document.getElementsByName(name);
	var selected = false;
	var selValue = "";
	for (var i = 0; i &lt; selElements.length; i++) {
		if (selElements[i].tagName.toLowerCase() == "input") {
			if (selElements[i].type.toLowerCase() == "checkbox" || selElements[i].type.toLowerCase() == "radio") {
				if (selElements[i].checked) {
					if (selected == false) {
						selected = true;
						selValue = selElements[i].value;
					}
					else {
						return false;
					}
				}
			}
		}
	}
	if (selected){
		return selValue;
	}else{
		return false;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:42.220+08:00</startedDateTime>
			<time>15</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/customString.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>383</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17170-1426562722000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17170</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Tue, 17 Mar 2015 03:25:22 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//系统定义的特殊字符集
//var specialChars = /[!@#\$%\^&amp;\*\(\)\{\}\[\]&lt;&gt;_\+\|~`-]|[=\/\\\?;:,！·#￥%……—*（）——、《》，。？'"]/g;
var specialChars = /[!&lt;&gt;]|[=\/\\'"]/g;
/******************************************************
*以下是对字符串对象（String）的扩展函数，任何String对象都可
*使用这些函数，例如：
var str = " dslf dsf  sfd  ";
alert(str.trim());  //显示这样的字符串"dslf dsf  sfd"
alert(str.deleteSpace());  //显示这样的字符串"dslfdsfsfd"
******************************************************/
 
/*
        function:在字符串左边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.lpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不需处理
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串
        var tempStr = new String();        // 临时字符串

        for(;;)
        {
                tempStr += addStr;
                if(tempStr.length &gt;= countLen - initStr.length)
                {
                        tempStr = tempStr.substring(0,countLen - initStr.length);
                        break;
                }
        }
        return tempStr + initStr;
}


/*
        function:在字符串右边补指定的字符串
        parameter：
                countLen:结果字符串的长度
                addStr:要附加的字符串
        return:处理后的字符串
*/
String.prototype.rpad = function(countLen,addStr)
{
        // 如果countLen不是数字，不处理返回
        if(isNaN(countLen))return this;

        // 初始字符串长度大于指定的长度，则不处理返回
        if(initStr.length &gt;= countLen)return this;

        var initStr = this;        // 初始字符串

        for(;;)
        {
                initStr += addStr;
                if(initStr.length &gt;= countLen)
                {
                        initStr = initStr.substring(0,countLen);
                        break;
                }
        }
        return initStr;
}

/*
        function: 去掉字符串中所有的空格
        return: 处理后的字符串
*/
String.prototype.atrim = function()
{
    // 用正则表达式将右边空格用空字符串替代。
    return this.replace(/(\s+)|(　+)/g, "");
}

// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格用空字符串替代。
    return this.replace(/(^\s+)|(\s+$)|(^　+)|(　+$)/g, "");
}

/*
        function:去掉字符串左边的空格
        return:处理后的字符串
*/
String.prototype.ltrim = function()
{
        return this.replace(/(^\s+)|(^　+)/g,"");
}


/*
        function:去掉字符串右边的空格
        return:处理后的字符串
*/
String.prototype.rtrim = function()
{
        return this.replace(/(\s+$)|(　+$)/g,"");
}


/*
        function:获得字符串的字节数
        return:字节数
        example:"test测试".getByte值为8
*/
String.prototype.getByte = function()
{
        var intCount = 0;
        for(var i = 0;i &lt; this.length;i ++)
        {
            // Ascii码大于255是双字节的字符
            var ascii = this.charCodeAt(i).toString(16);
            var byteNum = ascii.length / 2.0;
            intCount += (byteNum + (ascii.length % 2) / 2);
        }
        return intCount;
}

/*
        function: 指定字符集半角字符全部转变为对应的全角字符
        parameter:
                dbcStr: 要转换的半角字符集合
        return: 转换后的字符串
*/
String.prototype.dbcToSbc = function(dbcStr)
{
        var resultStr = this;

        for(var i = 0;i &lt; this.length;i ++)
        {
                switch(dbcStr.charAt(i))
                {
                        case ",":
                                resultStr = resultStr.replace(/\,/g,"，"); 
                                break;
                        case "!":
                                resultStr = resultStr.replace(/\!/g,"！"); 
                                break;
                        case "#":
                                resultStr = resultStr.replace(/\#/g,"＃"); 
                                break;
                        case "|":
                                resultStr = resultStr.replace(/\|/g,"|"); 
                                break;
                        case ".":
                                resultStr = resultStr.replace(/\./g,"。"); 
                                break;
                        case "?":
                                resultStr = resultStr.replace(/\?/g,"？"); 
                                break;
                        case ";":
                                resultStr = resultStr.replace(/\;/g,"；"); 
                                break;
                }
        }
        return resultStr;
}

//获取字符串按字节数指定的字串
String.prototype.bytesubstr = function(index1,index2)
{
        var resultStr = "";
        var byteCount = 0;
        for(var i = index1;i &lt; index2;i ++)
        {
                if(i &gt; this.length)break;
                if(this.charCodeAt(i) &gt; 255)byteCount += 2;
                else byteCount += 1;
                if(byteCount &gt; (index2 - index1))break;
                resultStr += this.charAt(i);
        }
        return resultStr;
}

//判断字符串是否是数字字符串，若是则返回true，否则返回false
String.prototype.isNumber = function() {
	return (this.isInt() || this.isFloat());
}
//判断字符串是否是浮点数字符串，若是则返回true，否则返回false
String.prototype.isFloat = function() {
	return /^(?:-?|\+?)\d*\.\d+$/g.test(this);
}
//判断字符串是否是整数字符串，若是则返回true，否则返回false
String.prototype.isInt = function() {
	return /^(?:-?|\+?)\d+$/g.test(this);
}
//判断字符串是否是正数字符串，若是正数则返回true，否则返回false
String.prototype.isPlus = function() {
	return this.isPlusInt() || this.isPlusFloat();
}
//判断字符串是否是正浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusFloat = function() {
	return /^\+?\d*\.\d+$/g.test(this);
}
//判断字符串是否是正整数字符串，若是正数则返回true，否则返回false
String.prototype.isPlusInt = function() {
	return /^\+?\d+$/g.test(this);
}
//判断字符串是否是负数字符串，若是正数则返回true，否则返回false
String.prototype.isMinus = function() {
	return this.isMinusInt() || this.isMinusFloat();
}
//判断字符串是否是负浮点数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusFloat = function() {
	return /^-\d*\.\d+$/g.test(this);
}
//判断字符串是否是负整数字符串，若是正数则返回true，否则返回false
String.prototype.isMinusInt = function() {
	return /^-\d+$/g.test(this);
}

//判断字符串是否只包含单词字符，若是则返回true，否则返回false
String.prototype.isLeastCharSet = function() {
	return !(/[^A-Za-z0-9_/s]/g.test(this));
}
//判断字符串是否是Email字符串，若是则返回true，否则返回false
String.prototype.isEmail = function() {
	//return /^\w+@.+\.\w+$/g.test(this);
	var re=/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;
	return re.test(this);
}
//判断字符串是否是邮政编码字符串，若是则返回true，否则返回false
String.prototype.isZip = function() {
	return /^\d{6}$/g.test(this);
}
//判断字符串是否是固定电话号码字符串，若是则返回true，否则返回false
String.prototype.isFixedTelephone = function() {
	//return /^(\d{2,4}-)?((\(\d{3,5}\))|(\d{3,5}-))?\d{3,18}(-\d+)?$/g.test(this);
	//2015年3月17日10:59:34 固定号码支持7位和8位
	return /^[(]{1}\d{3,4}[)]{1}\d{7,8}$/g.test(this)||/^\d{3,4}[-]{1}\d{7,8}$/g.test(this);
}
//判断字符串是否是手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isMobileTelephone = function() {
	return this.isBaseMobileTelephone();
	// || this.is3GMobileTelephone();
}
//判断字符串是否是13号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.isBaseMobileTelephone = function() {
	//return /^13\d{9}$/g.test(this);
	//return /^1[358]\d{9}$/g.test(this);
	//2015年3月17日10:58:42 应牟处要求，手机号放松校验，只校验11位数字
	return /^\d{11}$/g.test(this);
}
//判断字符串是否是3G-159号码段手机电话号码字符串，若是则返回true，否则返回false
String.prototype.is3GMobileTelephone = function() {
	return /^159$/g.test(this);
}
//判断字符串是否是电话号码字符串，若是则返回true，否则返回false
String.prototype.isTelephone = function() {
	return this.isMobileTelephone() || this.isFixedTelephone();
}
//判断字符串是否是日期字符串，若是则返回true，否则返回false
String.prototype.isDate = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9])))$/g.test(this);
}
//判断字符串是否是时间字符串，若是则返回true，否则返回false
String.prototype.isTime = function() {
	return /^(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否是日期时间字符串，若是则返回true，否则返回false
String.prototype.isDateTime = function() {
	return /^\d{1,4}-(?:(?:(?:0?[1,3,5,7,8]|1[0,2])-(?:0?[1-9]|(?:1|2)[0-9]|3[0-1]))|(?:(?:0?[4,6,9]|11)-(?:0?[1-9]|(?:1|2)[0-9]|30))|(?:(?:0?2)-(?:0?[1-9]|(?:1|2)[0-9]))) +(?:(?:0?|1)[0-9]|2[0-3]):(?:(?:0?|[1-5])[0-9]):(?:(?:0?|[1-5])[0-9])(?:\.(?:\d{1,3}))?$/g.test(this);
}
//判断字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isHasPreventedStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断应用名称字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isAppNameStr = function() {
	var re=/\=|\!|\/|\\|\s|&lt;|&gt;|#|\'|\"/;
	return re.test(this);
}
//判断模糊查询是否包含指定的不允许输入的字符(!&lt;&gt;=\/_)，若有则返回true，否则返回false
String.prototype.isSpecialCharForSearch = function() {
	//var re=/\=|\!|\\|&lt;|&gt;|\'|\"|\_/;
	var re=/\=|\!|\\|&lt;|&gt;|\'|\"/;
	return re.test(this);
}
//判断导航入口字符串是否包含指定的不允许输入的字符，若有则返回true，否则返回false
String.prototype.isSpecialCharForUrl = function() {
	var re=/\'|\"/;
	return re.test(this);
}
//密码验证
String.prototype.isSpecialCharForPassword = function() {
	//var re=/\'|\"/;
	var re=/[^A-Za-z0-9_:!?@#$*]/;
	return re.test(this);
}
//比较日期字符串，若相等则返回0，否则返回当前日期字符串和目标字符串之间相差的毫秒数，若其中一个字符串不符合日期或日期时间格式，则返回null
String.prototype.compareDate = function(target) {
	var thisDate = this.toDate();
	var targetDate = target.toDate();
	if (thisDate == null || targetDate == null) {
		return null;
	}
	else {
		return thisDate.getTime() - targetDate.getTime();
	}
}
//判断日期字符串指定的时期是否是当前日期，若是则返回true，否则返回false
String.prototype.isToday = function() {
	return this.trim().split(' ')[0].compareDate(getSysDate()) == 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt; 0;
}
//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt; 0;
}

//判断日期时间字符串指定的时期是否是指定日期时间之前，若是则返回true，否则返回false
String.prototype.isBeforeDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &lt; 0;
}

//判断日期字符串指定的时期是否是当前日期之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &gt;= 0;
}
//判断日期字符串指定的时期是否是当前日期之前，若是则返回true，否则返回false
String.prototype.isBeforeOrEqualDate = function(baseDate) {
	if (baseDate == null || !baseDate.isDate()) {
		return false;
	}
	return this.trim().split(' ')[0].compareDate(baseDate.trim().split(' ')[0]) &lt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间或之后，若是则返回true，否则返回false
String.prototype.isAfterOrEqualDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt;= 0;
}
//判断日期时间字符串指定的时期是否是指定日期时间之后，若是则返回true，否则返回false
String.prototype.isAfterDateTime = function(baseDateTime) {
	if (baseDateTime == null || !baseDateTime.isDateTime()) {
		return false;
	}
	return this.trim().compareDate(baseDateTime.trim()) &gt; 0;
}



//判断字符串中是否含有特殊字符，若有则返回true，否则返回false
String.prototype.hasSpecialChar = function() {
	specialChars.test('');
	return specialChars.test(this);
}
//删除字符串中的空格
String.prototype.deleteSpace = function() {
	return this.replace(/( +)|(　+)/g, '');
}
//删除字符串中指定的字符串
String.prototype.remove = function(str) {
	if (str == null || str == '') {
		return this;
	}
	return this.replace(str.toRegExp('g'), '');
}
//将字符串中包含的find字符串替换成target字符串，返回替换后的结果字符串
String.prototype.replaceByString = function(find, target) {
	return this.replace(find.toRegExp('g'), target);
}
//将字符串转换成相应的正则表达式
String.prototype.toRegExp = function(regType) {
	var find = ['\\\\', '\\$', '\\(', '\\)', '\\*', '\\+', '\\.', '\\[', '\\]', '\\?', '\\^', '\\{', '\\}', '\\|', '\\/'];
	var str = this;
	for (var i = 0; i &lt; find.length; i++) {
		str = str.replace(new RegExp(find[i], 'g'), find[i]);
	}
	if (regType == null || regType.trim() == '') {
		return new RegExp(str);
	}
	return new RegExp(str, regType);
}
//将字符串转换成Date对象，要求字符串必须符合日期或日期时间格式，否则返回null
String.prototype.toDate = function() {
	if (this.isDate()) {
		var data = this.split('-');
		return new Date(1*data[0], 1*data[1] - 1, 1*data[2] );
	}
	else if (this.isDateTime()) {
		var data = this.split(' ');
		var date = data[0].split('-');
		var time = data[1].split(".")[0].split(':');
		return new Date(1*date[0], 1*date[1] - 1, 1*date[2], 
			1*time[0], 1*time[1], 1*time[2]);
	}
	else {
		return null;
	}
}
//判断字符串是否以指定的前缀开始，prefix为前缀的正则表达式或字符串
String.prototype.startsWith = function(prefix) {
	if (prefix instanceof RegExp) {
		return new RegExp("^" + prefix.source).test(this);
	}
	else {
		return new RegExp("^" + prefix).test(this);
	}
}
//判断字符串是否以指定的后缀结束，suffix为后缀的正则表达式或字符串
String.prototype.endsWith = function(suffix) {
	if (suffix instanceof RegExp) {
		return new RegExp(suffix.source + "$").test(this);
	}
	else {
		return new RegExp(suffix + "$").test(this);
	}
}
//将字符串按HTML需要的编码方式编码
String.prototype.encodeHtml = function() {
	var strToCode = this.replace(/&lt;/g,"&amp;lt;");
	strToCode = strToCode.replace(/&gt;/g,"&amp;gt;");
	return strToCode;
}
//将字符串按HTML需要的编码方式解码
String.prototype.decodeHtml = function() {
	var strToCode = this.replace(/&amp;lt;/g,"&lt;");
	strToCode = strToCode.replace(/&amp;gt;/g,"&gt;");
	return strToCode;
}
/*********************************************
*字符串对象（String）扩展函数结束
*********************************************/

//获取系统日期字符串
function getSysDate() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	return sToday;
}
//获取系统日期时间字符串
function getSysDateTime() {
	var today  = new Date();
	var nYear  = today.getFullYear();
	var nMonth = today.getMonth() + 1;
	var nDay   = today.getDate();
	var nHours = today.getHours();
	var nMinutes = today.getMinutes();
	var nSeconds = today.getSeconds();
	var nMilliSeconds = today.getMilliseconds();
	var sToday = "";
	sToday += (nYear &lt; 1000) ? "" + (1900 + nYear) : nYear;
	sToday += "-";
	sToday += (nMonth &lt; 10) ? "0" + nMonth : nMonth;
	sToday += "-"
	sToday += (nDay &lt; 10) ? "0" + nDay : nDay;
	sToday += " ";
	sToday += (nHours &lt; 10) ? "0" + nHours : nHours;
	sToday += ":"
	sToday += (nMinutes &lt; 10) ? "0" + nMinutes : nMinutes;
	sToday += ":"
	sToday += (nSeconds &lt; 10) ? "0" + nSeconds : nSeconds;
	if (nMilliSeconds &lt; 10) {
		sToday += "00" + nMilliSeconds;
	}
	else if (nMilliSeconds &lt; 100) {
		sToday += "0" + nMilliSeconds;
	}
	else {
		sToday += nMilliSeconds;
	}
	return sToday;
}
//判断字符串是否能作为java语言的变量名
String.prototype.isNamedCharSet = function() {
    return /^[a-zA-Z_\$]+[a-zA-Z_\$0-9]*$/g.test(this);
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>15</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:42.235+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/verify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>377</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"11906-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=97</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>11906</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>var success = "SUCCESS"; //校验通过的返回值
var title = "fieldTitle"; //校验域的域标题属性名称
/****************************************************************************
** 表单域内容校验函数，要求所有的校验函数必须以formVerify的格式编写
** 返回值为字符串，"SUCCESS"表示校验通过，否则为校验不通过的提示信息
** 函数名可更改，但必须和formConfig文件中配置的函数名一致
** 函数的第一个参数为要校验的域的IHTMLElement对象，后面为自定义参数列表
** 注意: 所有自定义参数均以字符串类型传递。
*****************************************************************************/

function formVerify(field) {
	return "SUCCESS";
}

//密码校验
function passwordVerify(field) {
	if (!field.value.isHasPreventedStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "密码中有不允许使用的特殊字符！不允许使用的特殊字符包括 &gt;&lt;\/\\和英文的单双引号以及空格符";
}
//在平台运行管理--&gt;配置管理--&gt;应用系统参数配置中，应用名称中不能包含#
function appNameVerify(field) {
	if (!field.value.isAppNameStr()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "应用名称中不能包含&gt;&lt;\/\\#等特殊字符";
}
//导航入口中不能包含单引号，双引号特殊字符
function hasSpecialCharForUrlVerify(field) {
	if (!field.value.isSpecialCharForUrl()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含特殊字符";
}
//密码验证
function hasSpecialCharForPasswordVerify(field) {
	if (!field.value.isSpecialCharForPassword()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "只能包含大小写字母,数字,及_:!?@#$*特殊字符";
}
//模糊查询不能包含!&lt;&gt;=\/_等特殊字符
function hasSpecialCharForSearchVerify(field) {
	if (!field.value.isSpecialCharForSearch()) {
		//无特殊字符
		return success;
	}
	//有特殊字符
	return "不能包含!&lt;&gt;'=\\_\"特殊字符";
}
//数字校验
function numberVerify(field) {
	if (field.value.isNumber()) {
		return success;
	}
	return "只能填数字！";
}

//整数校验
function intVerify(field) {
	if (field.value.isInt()) {
		return success;
	}
	return "只能填半角型整数！";
}

//浮点数校验
function floatVerify(field) {
	if (field.value.isFloat()) {
		return success;
	}
	return "只能填半角型浮点数！";
}

//正数校验
function plusVerify(field) {
	if (field.value.isPlus()) {
		return success;
	}
	return "只能填半角型正数！";
}

//正整数校验
function plusIntVerify(field) {
	if (field.value.isPlusInt()) {
		return success;
	}
	return "只能填半角型正整数！";
}

//正浮点数校验
function plusFloatVerify(field) {
	if (field.value.isPlusFloat()) {
		return success;
	}
	return "只能填半角型正浮点数！";
}

//负数校验
function minusVerify(field) {
	if (field.value.isMinus()) {
		return success;
	}
	return "只能填半角型负数！";
}

//负整数校验
function minusIntVerify(field) {
	if (field.value.isMinusInt()) {
		return success;
	}
	return "只能填半角型负整数！";
}

//负浮点数校验
function minusFloatVerify(field) {
	if (field.value.isMinusFloat()) {
		return success;
	}
	return "只能填半角型负浮点数！";
}

//电子邮件校验
function emailVerify(field) {
	if (field.value.isEmail()) {
		return success;
	}
	return "不是合法的电子邮件地址！";
}

//单词字符校验
function wordcharVerify(field) {
	if (field.value.isLeastCharSet()) {
		return success;
	}
	return "只能填半角型大小写字母、数字和下划线！";
}

//邮政编码校验
function zipVerify(field) {
	if (field.value.isZip()) {
		return success;
	}
	return "不符合邮政编码标准！";
}

//手机号校验
function mobileVerify(field) {
	if (field.value.isMobileTelephone()) {
		return success;
	}
	return "不符合手机号格式！";
}

//电话号码校验
function telephoneVerify(field) {

	if (field.value.isTelephone()) {
		return success;
	}
	return "不符合电话号码格式！标准格式为：(xxxx)xxxxxxxx或者xxxx-xxxxxxxx或者手机号";
}

//日期格式校验
function dateVerify(field) {
	if (field.value.isDate()) {
		return success;
	}
	return "不符合日期格式标准！例如：2004-04-23";
}

//时间格式校验
function timeVerify(field) {
	if (field.value.isTime()) {
		return success;
	}
	return "不符合时间格式标准！例如：09:30:50";
}

//日期时间格式校验
function dateTimeVerify(field) {
	if (field.value.isDateTime()) {
		return success;
	}
	return "不符合日期时间格式标准！例如：2004-04-23 09:30:50";
}

//特殊字符校验
function hasSpecialCharVerify(field) {
	if (!field.value.hasSpecialChar()) {
		return success;
	}
	//return "不允许包含特殊字符！以下字符集为特殊字符集：" + specialChars.source;
	return "不允许包含!&lt;&gt;=\/等特殊字符";
}

//校验域日期必须在特定域日期之后
function afterDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须在特定域日期之前
function beforeDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//校验域日期必须等于或者在特定域日期之后
function afterOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期必须等于或者在特定域日期之前
function beforeOrEqualDateVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeOrEqualDate(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}
//校验域日期时间必须在特定域日期时间或之后
function afterOrEqualDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterOrEqualDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}
//校验域日期时间必须在特定域日期时间之后
function afterDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isAfterDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之后！";
}

//校验域日期时间必须在特定域日期时间之前
function beforeDateTimeVerify(field, compFieldName) {
	var field = field;
	var compField = document.getElementsByName(compFieldName);
	var compValue;
	if (compField != null &amp;&amp; compField.length &gt; 0) {
		compValue = compField[0].value;
	}
	if (field.value.isBeforeDateTime(compValue)) {
		return success;
	}
	return "必须在\"" + compField[0].getAttribute(title) + "\"之前！";
}

//在某两个值之间校验
function inValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &gt; lower &amp;&amp; value &lt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之间！";
}

//在某两个值之外校验
function outValueVerify(field, lower, high, includeLower, includeHigher) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; lower.isNumber() &amp;&amp; high.isNumber()) {
		value = parseFloat(value);
		lower = parseFloat(lower);
		high = parseFloat(high);
	}
	if (lower &gt;= high) {
		return "参数错误，小值必须小于大值！";
	}
	if (value &lt; lower || value &gt; high) {
		return success;
	}
	if (includeLower == "true" &amp;&amp; value == lower) {
		return success;
	}
	if (includeHigher == "true" &amp;&amp; value == high) {
		return success;
	}
	return "必须在\"" + lower + "\"和\"" + high + "\"之外！";
}

//某两个域之间校验
function inFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return inValueVerify(field, lower, high, includeLower, includeHigher);
}

//某两个域之外校验
function outFieldVerify(field, lowerField, highField, includeLower, includeHigher) {
	var lower = document.getElementsByName(lowerField)[0].value;
	var high = document.getElementsByName(highField)[0].value;
	if (lower == null || lower.trim() == "") {
		return "\"" + document.getElementsByName(lowerField)[0].getAttribute(title) + "\"作为小值不可为空！";
	}
	if (high == null || high.trim() == "") {
		return "\"" + document.getElementsByName(highField)[0].getAttribute(title) + "\"作为大值不可为空！";
	}
	return outValueVerify(field, lower, high, includeLower, includeHigher);
}

//大于某个值校验
function uperValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &gt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须大于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//小于某个值校验
function lowerValueVerify(field, compValue, canEquals) {
	var value = field.value;
	if (value.isNumber() &amp;&amp; compValue.isNumber()) {
		value = parseFloat(value);
		compValue = parseFloat(compValue);
	}
	if (value &lt; compValue) {
		return success;
	}
	if (canEquals == "true" &amp;&amp; value == compValue) {
		return success;
	}
	return "必须小于" + (canEquals == "true" ? "或等于\"" : "\"") + compValue + "\"！";
}

//大于某个域值校验
function uperFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return uperValueVerify(field, compValue, canEquals);
}

//小于某个域值校验
function lowerFieldVerify(field, compField, canEquals) {
	var compValue = document.getElementsByName(compField)[0].value;
	if (compValue == null) {
		compValue = "";
	}
	return lowerValueVerify(field, compValue, canEquals);
}

//判断输入值的长度必须等于maxlength
function fieldLengthVerify( field , maxlength ){
	//如果没有指定最大长度，默认为正确
	if( maxlength==undefined ){
		return success;
	}
	if( field.value.length==maxlength ){
		return success;
	}
	return "输入值应该为"+maxlength+"位！";
}
//java语言变量名校验
function namecharVerify(field){
    if(field.value.isNamedCharSet()){
       return success;
    }
    return "只能填半角型字母、数字、下划线和$,并且数字不能作为首字母！";
}</text>
				</content>
				<redirectionURL/>
				<headersSize>181</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:42.235+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/formVerify.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>381</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"17709-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=100</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>17709</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>/**
* bodyonload用来设置页面需要在BODY的onload事件里执行的程序，
* 当页面引入此js文件时，要求页面的BODY标签中不能设置onload事件，
* 需要在此事件中执行的JS程序请设置到此变量中。程序将在页面的onload事件中执行这些代码。
* 例如：
* &lt;script language="javascript" src="runFormVerify.js"&gt;&lt;/script&gt;
* &lt;script language="javascript"&gt;
* 	bodyonload = "alert('onload事件中运行的程序！')";
* &lt;/script&gt;
*/
var allHtml = "B,BIG,APPLET,ABBR,ACRONYM,ADDRESS,BASEFONT,BDO,BGSOUND,BIG,BLINK,BLOCKQUOTE,BR,BUTTON,CENTER,CITE,CITE,CODE,DEL,DFN,DIR,DIV,DL,EM,EMBED,FIELDSET,FONT,H1,H6,H2,H3,H4,H5,HR,I,IFRAME,IMG,INS,,KBD,LABEL,MAP,MARQUEE,MENU,NOBR,NOFRAMES,NOSCRIPT,OBJECT,OL,P,PRE,Q,S,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,STRONG,SUB,SUP,TABLEtrtd,TEXTAREA,TT,U,UL,VAR,WBR";
var allHtml1 = "INPUT,ISINDEX";
 	var htmlChar1 = allHtml1.split(",");
	var htmlChar = allHtml.split(",");
var formTitle = "fieldTitle"; 
var allMsg="";
var allHtmlMsg="";
var applicationName="/asone";
//为了提示错误以后移向第一个不符合规则的页面
var errObj = null;
var gifResource = new Array();
gifResource["info"] = applicationName+"/images/MessageInfo.gif";
gifResource["infoColor"] = "#009900";
gifResource["debug"] = applicationName+"/images/MessageDebug.gif";
gifResource["debugColor"] = "#0066FF";
gifResource["warn"] = applicationName+"/images/MessageWarn.gif";
gifResource["warnColor"] = "#0066FF";
gifResource["error"] = applicationName+"/images/MessageError.gif";
gifResource["errorColor"] = "#FF0000";
gifResource["fatal"] = applicationName+"/images/MessageFatal.gif";
gifResource["fatalColor"] = "#0066FF";
var gifPath=gifResource["error"];
var color=gifResource["errorColor"];


/**
 * 所有页面默认的onload内容
 */
function _load(){

}
/*
var exp = window.onload;
window.onload = function() {
	var submit = new Array();
	for (var i = 0; i &lt; document.forms.length; i++) {
		submit[i] = document.forms(i).submit;
		document.forms(i).submit[i] = function(verify,index) {
			if (verify == false || runFormVerify(this)) {
				submit();
				return true;
			}
			return false;
		};

		
		var onsubmit = document.forms(i).onsubmit;
		document.forms(i).onsubmit = function() {
			if (runFormVerify(this)) {
				if (onsubmit == null) {
					return true;
				}
				return onsubmit();
				
			}
			return false;
		};
	}
	if (exp != null) {
		exp();
	}
	if (bodyonload != null &amp;&amp; bodyonload.trim() != "") {
		eval(bodyonload);
	}
};
*/
/**
 * 页面提交
 */
function pageshow(form,verify){
	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	if (verify == false){
		if (isHtml){
			outputMsg();
			onFocus();
			return false;
		}
		form.submit();
		return true;
	}else{
		if (_check(form)){
			form.submit();
			return true;
		}
		onFocus();
		return false;
	}
}
function _check(form){

	allHtmlMsg = "";
	allMsg = "";
//不管验证不验证，将input的text和textarea
	//判断input
	var els = form.tags("input");
	var isHtml = false;
	
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		for (var j=0;j&lt;htmlChar1.length;j++){
			if(htmlChar1[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar1[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j]) + htmlChar1[j].length + 1 == inputValueNoSpace.length)){				
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar1[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar1[j] + "&gt;节点");
						
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
			}
		}
		
		for (var j=0;j&lt;htmlChar.length;j++){
			if(htmlChar[j].atrim() != ""){
				if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j] + "&gt;")!=-1 || inputValue.indexOf(htmlChar[j] + " ") != -1 || inputValueNoSpace.indexOf(htmlChar[j] + "&gt;")!=-1 || (inputValueNoSpace.indexOf("&lt;" + htmlChar[j]) + htmlChar[j].length + 1 == inputValueNoSpace.length)){
					if (inputValueNoSpace.indexOf("&lt;" + htmlChar[j])!=-1){
						showCheckInfo(els[i],"不能包含&lt;" + htmlChar[j] + "&gt;节点");
						isHtml = true;
						if (errObj == null){
							errObj = els[i];
						}
					}
				}
				if (inputValueNoSpace.indexOf("&lt;/" + htmlChar[j] + "&gt;")!=-1){
					showCheckInfo(els[i],"不能包含&lt;/" + htmlChar[j] + "&gt;节点");
					isHtml = true;
					if (errObj == null){
						errObj = els[i];
					}
				}
			}
		}
	}
	//判断textarea
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {
		var inputValue = els[i].value.toUpperCase();
		var inputValueNoSpace = inputValue.atrim();
		if (inputValue.indexOf("TEXTAREA ") != -1 || inputValueNoSpace.indexOf("TEXTAREA&gt;") != -1){
			if (inputValueNoSpace.indexOf("&lt;TEXTAREA") != -1){
				showCheckInfo(els[i],"不能包含&lt;textArea&gt;节点");
				isHtml = true;
				if (errObj == null){
					errObj = els[i];
				}
			}
		}
		if (inputValueNoSpace.indexOf("&lt;/TEXTAREA&gt;") != -1){
			showCheckInfo(els[i],"不能包含&lt;/textArea&gt;节点");
			isHtml = true;
			if (errObj == null){
				errObj = els[i];
			}
		}
	}
	if (runFormVerify(form,isHtml)){
		_checkButton(form);
		return true;
	}
	onFocus();
	return false;

}
/**
 * 设置页面上所有按钮的状态
 * @param form 要执行的标单
 * @param disabled 是否为不可操作 true 不可操作，fasle 可操作
 */
function _checkButton(form,disabled){
	if (disabled==null){
		disabled = true;
	}else if (!disabled){
		disabled = false;
	}
	var els = form.tags("button");
	for (var i = 0; i &lt; els.length; i++) {
		els[i].disabled = true;
	}
	els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {
		if (els[i].type=="button"){
			els[i].disabled = disabled;
		}
	}
}
function onFocus(){
	try{
		if (errObj == null){
			return false;
		}
		var tagName = errObj.tagName.toLowerCase();
		if ((tagName == "input" &amp;&amp; (errObj.type == "text" || errObj.type == "password")) || tagName == "textarrea") {
			//errObj.focus();
			errObj.select();
		}
	}catch(e){}
}
function pageClose(form,winObj){
		
		if (runFormVerify(form)){
			winObj.close();
		}
}
function runFormVerify(form,isHtml) {
	//allMsg="";
	//var form = document.forms.item(formI);
	var result = true;
	var els = form.tags("input");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("textarea");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	var els = form.tags("select");
	for (var i = 0; i &lt; els.length; i++) {

		if (!checkVerify(els[i])) {
			result = false;
		}
	}
	if (isHtml){
		result = false;
	}
	if (result == false) {
		outputMsg();
	}
	return result;
}

function checkVerify(el) {

	var tagName = el.tagName.toLowerCase();
	
	var _className = el.className;
	
	/*if (_className == "input02" &amp;&amp; el.value.trim() == "") {
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;		
	}*/
	
	var isRequired=el.getAttribute("required") 
	var value = el.value;
	
	if (isRequired != null &amp;&amp; isRequired=="true") {
	    //add by renjia 根据赵艳峰的需求，当必填字段只有多个空格时判空。
		if( value!=null ){
			value = value.trim();
		}
		if( value==null || value==""){
			showCheckInfo(el, "不能为空!");
			if (errObj == null){
				errObj = el;
			}
			return false;	
		}
	}
	
	
	/*
	var notNull = el.getAttribute("notnull");
	if (notNull != null &amp;&amp; notNull.trim() != "") {
		if (el.value == null || el.value.trim() == "") {
			showCheckInfo(el, notNull);
			if (errObj == null){
				errObj = el;
			}
			return false;
		}
	}
	*/
	
	if ((tagName == "input" &amp;&amp; el.type == "text") || tagName == "textarea") {
		var len = el.getAttribute("maxlength");
		if (len != null &amp;&amp; !isNaN(parseInt(len)) &amp;&amp; parseInt(len) &gt; 0) {
			if (el.value.getByte() &gt; parseInt(len)) {
				showCheckInfo(el, "输入的内容过长！最大长度为：" + len + "字符(一个汉字占两个字符)");
				if (errObj == null){
					errObj = el;
				}
				return false;
			}
		}
	}
	var reValue = true;
	var verifys = el.getAttribute("fieldType");
	
	//if(verifys==null || verifys.indexOf("hasSpecialChar")==-1){
		//var regex=/[\'\"%]/g;
		//if(regex.test(value)){
			//showCheckInfo(el, "不能包含英文的引号、单引号或百分号!");
			//if (errObj == null){
				//errObj = el;
			//}
			//return false;	
		//}
	//}
	if (verifys!=null &amp;&amp; verifys != ""){
		var vver = verifys.split(";");
		
		for(var i=0;i&lt;vver.length;i++){
			var checkResult;
			var verify = vver[i];
			if (tagName == "select" 
				|| verify == null 
				|| verify.trim() == "" 
				|| el.value == null
				|| el.value.trim() == "") {
				if (errObj == null){
					errObj = el;
				}
				return true;
			}
			var paras = verify.split(",");
			var program = paras[0] + "Verify(el";
			for (var j = 1; j &lt; paras.length; j++) {
				var para = paras[j];
				program += (", \"" + para + "\"");
			}
			program += ");";
			try{
				checkResult = eval(program);
				if (reValue){
					if (success != checkResult) {
						reValue = false;
					}
				}
			}catch(e){
				alert("校验错误，请检查restriction输入的校验类型是否正确，注意大小写：" + verify + "\n错误：" + e);
			}
			if(success != checkResult){
				showCheckInfo(el, checkResult);
			}
		}		
	}
	if (reValue) {
		return true;
	}
	//if (errObj == null){
		errObj = el;
	//}
	return false;
}

function showCheckInfo(el, msg) {
	var atitle = el.getAttribute(formTitle);
	if (atitle == null){
		atitle = el.title;
	}
	if (atitle == null){
		atitle = "";
	}
	if (allMsg!=""){
		allMsg+="\n";
	}
	if (allHtmlMsg!=""){
		allHtmlMsg+="&lt;br&gt;";
	}
	if (atitle==""){
		allMsg+=atitle + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;" + atitle + msg.encodeHtml()+"&lt;/font&gt;";
	}else{
		allMsg+="[" + atitle + "]" + msg;
		allHtmlMsg+= "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifPath+" &gt;&lt;font color="+color+"&gt;["+atitle + "]" + msg.encodeHtml()+"&lt;/font&gt;";
	}
}



function msgClick(msgdiv) {
	var msgname = msgdiv.id.replace(new RegExp("^(.*)" + SUF_MSGDIV_ID + "$"), "$1");
	var index = 0;

	msgdiv.style.display = "none";
	try {
		document.getElementsByName(msgname)[index].focus();
	}
	catch (e) {}
}

//获取某个Html元素在运行时的绝对位置信息
function GetAbsoluteLocationEx(element) 
{ 
	if ( arguments.length != 1 || element == null ) { 
		return null; 
	} 
	var elmt = element; 
	var offsetTop = elmt.offsetTop; 
	var offsetLeft = elmt.offsetLeft; 
	var offsetWidth = elmt.offsetWidth; 
	var offsetHeight = elmt.offsetHeight; 
	while( elmt = elmt.offsetParent ) { 
		// add this judge 
		if ( elmt.style.position == 'absolute' || elmt.style.position == 'relative'  
			|| ( elmt.style.overflow != 'visible' &amp;&amp; elmt.style.overflow != '' ) ) { 
			break; 
		}  
		offsetTop += elmt.offsetTop; 
		offsetLeft += elmt.offsetLeft; 
	} 
	return { absoluteTop: offsetTop, absoluteLeft: offsetLeft, 
		offsetWidth: offsetWidth, offsetHeight: offsetHeight }; 
}
/**
 * 校验信息的输出
 */ 
function outputMsg(){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		document.getElementById("msg").innerHTML=allHtmlMsg;
		document.getElementById("msg").style.display="block";
		document.getElementById("msg").className="showMessage";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(allMsg);
	}
*/
	alert(allMsg);//added by renjia 2008-03-28
	allHtmlMsg = "";
	allMsg = "";
}
function setClick(obj){
	obj.onclick = function(){
		removeMsg();
	}
	obj.title="点击此处隐藏提示信息";
}
/**
 * 页面的特殊校验
 * classType==0:默认的方式，弹出窗口
 * classType==1:在页面内显示
 */ 
function showMsg(msg,msgType,classType){
/* deleted by renjia 外汇局客户要求将提示消息统一改为alert方式
	try{
		if( msg=='' ){
			return;
		}
		var classNameStr="alertMessage";
		if( classType=='1' ){
			classNameStr="showMessage";
		}
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		document.getElementById("msg").style.display="";
		document.getElementById("msg").className=classNameStr;
		
		if( classType==0 ){
			//动态创建消息弹出页面框：由多个div组成
			createDiv(htmlMsg);
			//动态创建div下一层的frame，用来遮掩页面的select等空间
			createIframe();
		}
		if( classType==1 ){
			document.getElementById("msg").innerHTML=htmlMsg;
			setClick(document.getElementById("msg"));
		}
		//window.location="#";
	}catch(e){
		alert(msg);
	}
*/
	if( msg=='' ){//added by renjia 2008-03-28
		return;
	}
	alert(msg);//added by renjia 2008-03-28
}

/**
 * 创建iframe，作为div的底层，覆盖页面的select框
 */
function createIframe(){
	var cFrame = document.createElement("iframe");
	cFrame.id = "fMsg";
	cFrame.style.display="";
	cFrame.className="fAlertMessage";
	
	document.body.appendChild(cFrame);
}

/**
 * 创建消息弹出页面框：有多个div组成
 */
function createDiv(htmlMsg){
	var obj = document.getElementById("msg");
	// 鼠标点击消息弹出框激发拖动事件
	obj.onmousedown=Function("beginDrag(this,document.getElementById('fMsg'),event);");
	
	var div1 = document.createElement("DIV");
	div1.className = "massage";
	obj.appendChild(div1);
	
	var div2 = document.createElement("DIV");
	div2.className = "header";
	div1.appendChild(div2);
	
	var span = document.createElement("SPAN");
	span.style.display = "inline";
	span.style.cursor = "hand";
	span.style.cssfloat="right"
	span.innerHTML = "×";
	span.onclick = Function("msg.style.display='none';document.getElementById('fMsg').style.display='none'");
	div2.appendChild(span);
	
	var div3 = document.createElement("DIV");
	div3.style.display = "inline";
	div3.style.width = "150px";
	div3.style.position = "absolute";
	div3.innerHTML = "提示信息";
	div2.appendChild(div3);

	var div4 = document.createElement("DIV");
	div4.innerHTML = htmlMsg;
	div1.appendChild(div4);
}

function _alert(msg,msgType){
	showMsg(msg,msgType);
}
/**
 * 除去所有错误
 */ 
function removeMsg(){
	try{
		document.getElementById("msg").innerHTML="";
		document.getElementById("msg").style.display="none";
		if(document.getElementById("fMsg")!=null){
			document.getElementById("fMsg").style.display="none";
		}
		//window.location="#";
	}catch(e){
		alert(e);
	}
}
/**
 * 输出所有的错误
 */ 
function outputMsgs(msg,msgType){
	try{
		var gifMsgPath;
		var colorMsg;
		if (msgType == null){ 
			gifMsgPath = gifResource["info"];
			colorMsg = gifResource["infoColor"];
		}else{
			gifMsgPath = gifResource[msgType];
			colorMsg = gifResource[msgType + "Color"];
		}

		var htmlMsg = "&amp;nbsp;&amp;nbsp;&lt;IMG  src="+gifMsgPath+" &gt;&lt;font color="+colorMsg+"&gt;" + msg+"&lt;/font&gt;";
		 
		var msgObj=document.getElementById("msg");
		if (msgObj.innerHTML==""){
			msgObj.innerHTML=htmlMsg;
		}else{
			msgObj.innerHTML+="&lt;br&gt;" + htmlMsg;
		}
		document.getElementById("msg").style.display="";
		setClick(document.getElementById("msg"));
		window.location="#";
	}catch(e){
		alert(msg);
	}
}

/*
 * 信息输出框的拖拽实现
 */
function beginDrag(fMsg, fMsgObj, event) {
	//上层的div位置
	var deltaX = event.clientX - parseInt(fMsg.style.left);
	var deltaY = event.clientY - parseInt(fMsg.style.top);
	//下层的frame位置
	var fDeltaX = event.clientX - parseInt(fMsgObj.style.left);
	var fDeltaY = event.clientY - parseInt(fMsgObj.style.top);
	
	if (document.addEventListener) {//2 级 DOM事件模型
		document.addEventListener("mousemove", moveHandler, true);
		document.addEventListener("mouseup", upHandler, true);
	}else if (document.attachEvent) {//IE5+事件模型
		document.attachEvent("onmousemove", moveHandler);
		document.attachEvent("onmouseup", upHandler);
	}else {//IE4事件模型
		var oldmovehandler = document.onmousemove;
		var olduphandler = document.onmouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}

	//禁止起泡
	if (event.stopPropagation)//DOM2
		event.stopPropagation();
	else 
		event.cancelBubble = true;//IE

	if (event.preventDefault)
		event.preventDefault();
	else 
		event.cancelBubble = true;
		
	//拖动鼠标
	function moveHandler(e) {
		if (!e)
			e = window.event;
		//移动上层的div
		fMsg.style.left = (e.clientX - deltaX) + "px";
		fMsg.style.top = (e.clientY - deltaY) + "px";
		//移动下层的frame
		fMsgObj.style.left = (e.clientX - fDeltaX) + "px";
		fMsgObj.style.top = (e.clientY - fDeltaY) + "px";

		if (e.stopPropagation)
			e.stopPropagation();
		else 
			e.cancelBubble = true;
	}
	
	//放开鼠标
	function upHandler(e) {
		if (!e)
			e = window.event;
		fMsg.style.cursor = "default";
		if (document.removeEventListener) { //DOM2
			document.removeEventListener('mouseup', upHandler, true);
			document.removeEventListener('mousemove', moveHandler, true);
		}else if (document.detachEvent) { //IE5+
			document.detachEvent("onmousemove", moveHandler);
			document.detachEvent("onmouseup", upHandler);
		}else {//IE4
			document.onmouseup = olduphandler;
			document.onmousemove = oldmovehandler;
		}
		if (e.stopPropagation)
			e.stopPropagation();
		else e.cancelBubble = true;
	}
}</text>
				</content>
				<redirectionURL/>
				<headersSize>182</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
		<entry>
			<pageref>0</pageref>
			<startedDateTime>2017-12-05T02:33:42.235+08:00</startedDateTime>
			<time>0</time>
			<request>
				<method>GET</method>
				<url>http://asone.safe/asone/javascript/page.js</url>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>Accept</name>
						<value>application/javascript, */*;q=0.8</value>
					</header>
					<header>
						<name>Referer</name>
						<value>http://asone.safe/asone/servlet/UserServlet?method=add</value>
					</header>
					<header>
						<name>Accept-Language</name>
						<value>zh-CN</value>
					</header>
					<header>
						<name>User-Agent</name>
						<value>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)</value>
					</header>
					<header>
						<name>Accept-Encoding</name>
						<value>gzip, deflate</value>
					</header>
					<header>
						<name>Host</name>
						<value>asone.safe</value>
					</header>
				</headers>
				<queryString/>
				<headersSize>375</headersSize>
				<bodySize>0</bodySize>
			</request>
			<response>
				<status>304</status>
				<statusText>Not Modified</statusText>
				<httpVersion>HTTP/1.1</httpVersion>
				<cookies/>
				<headers>
					<header>
						<name>ETag</name>
						<value>W/"4209-1410542474000"</value>
					</header>
					<header>
						<name>Keep-Alive</name>
						<value>timeout=5, max=95</value>
					</header>
					<header>
						<name>Content-Type</name>
						<value>text/javascript</value>
					</header>
					<header>
						<name>Content-Length</name>
						<value>4209</value>
					</header>
					<header>
						<name>Last-Modified</name>
						<value>Fri, 12 Sep 2014 17:21:14 GMT</value>
					</header>
				</headers>
				<content>
					<size>2048</size>
					<mimeType>text/javascript</mimeType>
					<text>//判断是否已经是最后一页的标志,0表示尚未到达最后一页，1表示已经到达最后一页
var pageBool = '0';

//向前分页
function previousPage(formAction, curPageNum ){
	toPage(formAction,  curPageNum );
}

//向前分页
function nextPage(formAction,  curPageNum  ){
	//如果已经到达最后一页了，则不再执行。
	if(pageBool=='1'){
		return false;
	}
	toPage(formAction,  curPageNum);
}

//跳转到第几页
function toPage(formAction,  curPageNum ){
	if( !checkPage() ){
		return;
	}
	document.all.curPageNum.value=curPageNum;
	if(formAction!=""){
		document.forms[0].action=formAction;
	}
	document.forms[0].submit();
}
//对分页查询条件进行校验，需要根据实际情况重写，默认恒返回true
function checkPage(){
	return true;
}
//将列表补全
function initList( perPageSize ){
	var rowLength = listTable.rows.length-1;
	if( rowLength&lt;=perPageSize*1 ){
		document.all.nextpage.disabled="true";
		document.all.endpage.disabled="true";
		//若需要补全列表，则表名已经到达最后一页了。
		pageBool='1';
		for( var i=0 ; i&lt;perPageSize*1-rowLength+1 ; i++ ){
			var rowObj = listTable.insertRow();
			rowObj.className="listdata";
			for( var j=0 ; j&lt;listTable.rows[ 0 ].cells.length ; j++ ){
				var cellObj=rowObj.insertCell();
			}
		}
	}
	&lt;!--将$per_Page_Size+1条记录，隐藏显示--&gt;
	var rowObj=listTable.rows;
	if(rowObj.length==perPageSize+2){
		rowObj[perPageSize+1].style.display="none";
	}
}

/**
 * 弹出模式窗体
 * @param url 地址
 * @param obj 参数
 * @param dialogWidth IE7宽度
 * @param dialogHeight IE7高度
 * @return 返回结果
 */
function modalDialog(url,obj,dialogWidth,dialogHeight){
	dialogWidth=ieX(dialogWidth);
	dialogHeight=ieY(dialogHeight);
	return window.showModalDialog(url,obj,"dialogWidth:" + dialogWidth + "px; dialogHeight:" + dialogHeight + "px; help:no; status:0");
}
/**
 * 弹出窗口功能
 * @param url 弹出窗口的url
 * @param name 弹出窗口的名称
 * @return 返回当前浏览器版本所需要的宽度
 */
function openWin(url,name,iWidth,iHeight){
	var url;
	var name;
    if (iWidth==null){
		iWidth=400;
	}
	if (iHeight==null){
		iHeight=300;
	}
	_open(url,name,iWidth,iHeight);
}

/*
alwaysLowered | yes/no | 指定窗口隐藏在所有窗口之后 
alwaysRaised | yes/no | 指定窗口悬浮在所有窗口之上 
depended | yes/no | 是否和父窗口同时关闭 
directories | yes/no | Nav2和3的目录栏是否可见 
height | pixel value | 窗口高度 
hotkeys | yes/no | 在没菜单栏的窗口中设安全退出热键 
innerHeight | pixel value | 窗口中文档的像素高度 
innerWidth | pixel value | 窗口中文档的像素宽度 
location | yes/no | 位置栏是否可见 
menubar | yes/no | 菜单栏是否可见 
outerHeight | pixel value | 设定窗口(包括装饰边框)的像素高度 
outerWidth | pixel value | 设定窗口(包括装饰边框)的像素宽度 
resizable | yes/no | 窗口大小是否可调整 
screenX | pixel value | 窗口距屏幕左边界的像素长度 
screenY | pixel value | 窗口距屏幕上边界的像素长度 
scrollbars | yes/no | 窗口是否可有滚动栏 
titlebar | yes/no | 窗口题目栏是否可见 
toolbar | yes/no | 窗口工具栏是否可见 
Width | pixel value | 窗口的像素宽度 
z-look | yes/no | 窗口被激活后是否浮在其它窗口之上
*/
function _open(url,name,iWidth,iHeight,iLeft,iTop){
  var url;                                 //转向网页的地址;
  var name;                           //网页名称，可为空;
  iWidth = ieX(iWidth);                          //弹出窗口的宽度;
  iHeight = ieY(iHeight);                     //弹出窗口的高度;
  if (iTop==null)
  iTop = (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
  if (iLeft==null)
  iLeft = (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;
  window.open(url,name,'height='+iHeight+',,innerHeight='+iHeight+',width='+iWidth+',innerWidth='+iWidth+',top='+iTop+',left='+iLeft+',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');
 }
/**
 * 处理弹出窗口的宽度
 * @param n IE7宽度
 * @return 返回当前浏览器版本所需要的宽度
 */
function ieX(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}
/**
 * 处理弹出窗口的高度
 * @param n IE7高度
 * @return 返回当前浏览器版本所需要的高度
 */
function ieY(n){
	/**if (ieVer&lt;7){
		n = n+10
	}
	if (n&lt;0){
		n=0;
	}**/
	return n;
}</text>
				</content>
				<redirectionURL/>
				<headersSize>179</headersSize>
				<bodySize>0</bodySize>
			</response>
			<cache/>
			<timings>
				<send>0</send>
				<wait>0</wait>
				<receive>0</receive>
			</timings>
		</entry>
	</entries>
</log>